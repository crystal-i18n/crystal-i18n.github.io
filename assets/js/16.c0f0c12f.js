(window.webpackJsonp=window.webpackJsonp||[]).push([[16],{368:function(t,s,a){"use strict";a.r(s);var n=a(42),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"translation-lookups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#translation-lookups"}},[t._v("#")]),t._v(" Translation lookups")]),t._v(" "),a("p",[t._v("Translation lookups can be performed through the use of the "),a("code",[t._v("#translate")]),t._v(" or "),a("code",[t._v("#translate!")]),t._v(" methods (or the shorter\nequivalents: "),a("code",[t._v("#t")]),t._v(" or "),a("code",[t._v("#t!")]),t._v("). Those methods try to find a matching translation for a specific "),a("em",[t._v("key")]),t._v(", which can be\ncomprised of multiple namespaces or scopes separated by a dot ("),a("code",[t._v(".")]),t._v("). For example "),a("code",[t._v('"simple_translation"')]),t._v(" is a valid key,\nas of "),a("code",[t._v('"namespace.simple.translation"')]),t._v(".")]),t._v(" "),a("p",[t._v("When translation lookups are performed for a key that don't match any existing translation, there are two possible\noutcomes depending on the method being used:")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("#translate")]),t._v(" returns an automatic message indicating that the translation is missing (for example\n"),a("code",[t._v('"missing translation: fr.unknown.translation"')]),t._v(")")]),t._v(" "),a("li",[a("code",[t._v("#translate!")]),t._v(" raises an "),a("code",[t._v("I18n::Errors::MissingTranslation")]),t._v(" exception")])]),t._v(" "),a("h2",{attrs:{id:"simple-lookups"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#simple-lookups"}},[t._v("#")]),t._v(" Simple lookups")]),t._v(" "),a("p",[t._v("Simple translation lookups that don't involve interpolations or pluralizations can be performed by specifying the\nintended key to the "),a("code",[t._v("#translate")]),t._v(" method. For example, the following file defines simple translations:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("en")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a message"')]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("translation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"This is a simple translation"')]),t._v("\n")])])]),a("p",[t._v("Given the above translations, the following lookup can be performed using the "),a("code",[t._v("#translate")]),t._v(" method (or its shorter\nequivalent "),a("code",[t._v("#t")]),t._v("):")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.translation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "This is a simple translation"')]),t._v("\n")])])]),a("p",[t._v("Translation keys can also be expressed as Symbols:")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":message")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "This is a message"')]),t._v("\n")])])]),a("h2",{attrs:{id:"interpolations"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#interpolations"}},[t._v("#")]),t._v(" Interpolations")]),t._v(" "),a("p",[t._v("Variables can be defined in translations and their values can be specified to the "),a("code",[t._v("#translate")]),t._v(" method as well. As an\nexample, the following file defines a translation involving variable interpolations:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("en")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("interpolation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Hello, %{name}!"')]),t._v("\n")])])]),a("p",[t._v("In order to look up translations involving interpolations, the required variables can be specified either as extra named\narguments to the "),a("code",[t._v("#translate")]),t._v(" method or as a simple hash or named tuple. The following translation resolutions are all\nequivalent:")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.interpolation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("         "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "Hello, John Doe!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.interpolation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"name"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v(">")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "Hello, John Doe!"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.interpolation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v(" name"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"John Doe"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "Hello, John Doe!"')]),t._v("\n")])])]),a("h2",{attrs:{id:"pluralization"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#pluralization"}},[t._v("#")]),t._v(" Pluralization")]),t._v(" "),a("p",[t._v("Pluralization is achieved using a special interpolation variable: "),a("code",[t._v("count")]),t._v(". Depending on the value specified for this\nvariable and the currently activated locale, a predefined pluralization rule is applied in order to identify which\nplural form is considered. These plural forms have to be defined in translation files ; for example the following could\nbe defined for a pluralized translation in English:")]),t._v(" "),a("div",{staticClass:"language-yaml extra-class"},[a("pre",{pre:!0,attrs:{class:"language-yaml"}},[a("code",[a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("en")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n  "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("pluralization")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("one")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"One item"')]),t._v("\n      "),a("span",{pre:!0,attrs:{class:"token key atrule"}},[t._v("other")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"%{count} items"')]),t._v("\n")])])]),a("div",{staticClass:"custom-block tip"},[a("p",{staticClass:"custom-block-title"},[t._v("TIP")]),t._v(" "),a("p",[t._v("For many languages like English, only two forms are used: singular and plural. Those correspond respectively to the\n"),a("code",[t._v("one")]),t._v(" and "),a("code",[t._v("other")]),t._v(" keys in translation files. However, depending on the language being used other keys could be defined.")]),t._v(" "),a("p",[t._v("Crystal I18n comes with built-in pluralization rules for most of the available locales and supports all the short\nmnemonic tags defined "),a("a",{attrs:{href:"http://cldr.unicode.org/index/cldr-spec/plural-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("by the CLDR"),a("OutboundLink")],1),t._v(" for plural categories ("),a("code",[t._v("zero")]),t._v(",\n"),a("code",[t._v("one")]),t._v(", "),a("code",[t._v("two")]),t._v(", "),a("code",[t._v("few")]),t._v(", "),a("code",[t._v("many")]),t._v(" and "),a("code",[t._v("other")]),t._v(").")]),t._v(" "),a("p",[t._v("For more details regarding pluralization rules, please consult "),a("a",{attrs:{href:"/pluralization_rules"}},[t._v("Pluralization rules")]),t._v(".")])]),t._v(" "),a("p",[t._v("In order to resolve translations involving pluralizations, the "),a("code",[t._v("count")]),t._v(" parameter has to be specified with the intended\nvalue when using the "),a("code",[t._v("#translate")]),t._v(" method. For example:")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.pluralization"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "One item"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.pluralization"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("42")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "42 items"')]),t._v("\n")])])]),a("h2",{attrs:{id:"defaults"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#defaults"}},[t._v("#")]),t._v(" Defaults")]),t._v(" "),a("p",[t._v("A default value can be specified in order to be returned if the translation is missing. For example:")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"unknown.pluralization"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" default"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"Unknown"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "Unknown"')]),t._v("\n")])])]),a("h2",{attrs:{id:"scopes"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#scopes"}},[t._v("#")]),t._v(" Scopes")]),t._v(" "),a("p",[t._v("Scopes can be specified separately from the translation key if needed. For example, the following translation lookups\nare all equivalent:")]),t._v(" "),a("div",{staticClass:"language-crystal extra-class"},[a("pre",{pre:!0,attrs:{class:"language-crystal"}},[a("code",[a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.scoped.translation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("              "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "This is a simple translation"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"translation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"simple.scoped"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "This is a simple translation"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("t"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"translation"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" scope"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":simple")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":scoped")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v('# outputs "This is a simple translation"')]),t._v("\n")])])])])}),[],!1,null,null,null);s.default=e.exports}}]);