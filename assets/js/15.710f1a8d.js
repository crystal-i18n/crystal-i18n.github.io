(window.webpackJsonp=window.webpackJsonp||[]).push([[15],{369:function(t,a,s){"use strict";s.r(a);var n=s(42),e=Object(n.a)({},(function(){var t=this,a=t.$createElement,s=t._self._c||a;return s("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[s("h1",{attrs:{id:"translation-loaders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#translation-loaders"}},[t._v("#")]),t._v(" Translation loaders")]),t._v(" "),s("p",[t._v('Translation loaders are used to load translation files in order to "inject" the resulting data into\n'),s("a",{attrs:{href:"/translation_catalogs"}},[t._v("catalogs of translations")]),t._v(". Translations loaders are configured through the use of the\n"),s("a",{attrs:{href:"/ref/I18n/Config.html#loaders:Array(I18n::Loader::Base)-instance-method",target:"_blank"}},[s("code",[t._v("I18n::Config#loaders")])]),t._v("\nmethod:")]),t._v(" "),s("div",{staticClass:"language-crystal extra-class"},[s("pre",{pre:!0,attrs:{class:"language-crystal"}},[s("code",[s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("config"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("loaders "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Loader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("YAML")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new"),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),s("span",{pre:!0,attrs:{class:"token string"}},[t._v('"config/locales"')]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),s("h2",{attrs:{id:"built-in-translation-loaders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#built-in-translation-loaders"}},[t._v("#")]),t._v(" Built-in translation loaders")]),t._v(" "),s("p",[t._v("Crystal I18n has built-in support for two loader types:")]),t._v(" "),s("ul",[s("li",[s("a",{attrs:{href:"/ref/I18n/Loader/YAML.html",target:"_blank"}},[s("code",[t._v("I18n::Loader::YAML")])]),t._v(" - allows to load YAML\ntranslations files")]),t._v(" "),s("li",[s("a",{attrs:{href:"/ref/I18n/Loader/JSON.html",target:"_blank"}},[s("code",[t._v("I18n::Loader::JSON")])]),t._v(" - allows to load JSON\ntranslations files")])]),t._v(" "),s("p",[t._v("Each of the above loader implementation supports translations files organized accross multiple files (eg. multiple\nYAML files organized in sub-directories for a specific locale). The above loaders can be initialized from an absolute or\nrelative directory path (where translations files will be looked up).")]),t._v(" "),s("h2",{attrs:{id:"custom-translation-loaders"}},[s("a",{staticClass:"header-anchor",attrs:{href:"#custom-translation-loaders"}},[t._v("#")]),t._v(" Custom translation loaders")]),t._v(" "),s("p",[t._v("It is possible to write new translation files in order to load translations from other data sources. For example it\ncould be possible to write translation loaders to load translations from a database, XML files, etc.")]),t._v(" "),s("p",[t._v("To do so, it is necessary to subclass the "),s("code",[t._v("I18n::Loader::Base")]),t._v(" abstract class and to provide aÂ "),s("code",[t._v("#load")]),t._v(" method that\nreturns a valid "),s("a",{attrs:{href:"/ref/I18n/TranslationsHash.html",target:"_blank"}},[t._v("translation hash")]),t._v(":")]),t._v(" "),s("div",{staticClass:"language-crystal extra-class"},[s("pre",{pre:!0,attrs:{class:"language-crystal"}},[s("code",[s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("MyLoader")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Loader")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Base")]),t._v("\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token method-definition"}},[s("span",{pre:!0,attrs:{class:"token function"}},[t._v("load")])]),t._v(" "),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TranslationsHash")]),t._v("\n    translations "),s("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),s("span",{pre:!0,attrs:{class:"token constant"}},[t._v("TranslationsHash")]),s("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("new\n    "),s("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# fetch translations")]),t._v("\n    translations\n  "),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),s("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),s("p",[s("em",[t._v("How")]),t._v(" translations loaders are initialized is something that is up to each translation loader implementation.")])])}),[],!1,null,null,null);a.default=e.exports}}]);