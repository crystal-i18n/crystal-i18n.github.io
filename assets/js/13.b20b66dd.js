(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{367:function(t,a,e){"use strict";e.r(a);var s=e(42),n=Object(s.a)({},(function(){var t=this,a=t.$createElement,e=t._self._c||a;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h1",{attrs:{id:"pluralization-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#pluralization-rules"}},[t._v("#")]),t._v(" Pluralization rules")]),t._v(" "),e("h2",{attrs:{id:"built-in-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#built-in-rules"}},[t._v("#")]),t._v(" Built-in rules")]),t._v(" "),e("p",[t._v("Crystal I18n has built-in support for most of the existing pluralization rules. All these pluralizations rules are\ndefined and implemented under the "),e("a",{attrs:{href:"/ref/I18n/Pluralization/Rule.html",target:"_blank"}},[e("code",[t._v("I18n::Pluralization::Rule")])]),t._v("\nnamespace.")]),t._v(" "),e("h2",{attrs:{id:"custom-rules"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#custom-rules"}},[t._v("#")]),t._v(" Custom rules")]),t._v(" "),e("p",[t._v("It is possible to define custom pluralization rules by subclassing the "),e("code",[t._v("I18n::Pluralization::Rule")]),t._v(" abstract class.\nSubclasses must implement an "),e("code",[t._v("#apply")]),t._v(" method that takes an single "),e("code",[t._v("count")]),t._v(" argument (float or int) and that returns a\nvalid "),e("a",{attrs:{href:"http://cldr.unicode.org/index/cldr-spec/plural-rules",target:"_blank",rel:"noopener noreferrer"}},[t._v("CLDR plural category tag"),e("OutboundLink")],1),t._v(". Some of these tags include\n"),e("code",[t._v(":zero")]),t._v(", "),e("code",[t._v(":one")]),t._v(", "),e("code",[t._v(":two")]),t._v(", "),e("code",[t._v(":few")]),t._v(", "),e("code",[t._v(":many")]),t._v(" and "),e("code",[t._v(":other")]),t._v(".")]),t._v(" "),e("p",[t._v("Here is an example pluralization rule that could be written for the English language:")]),t._v(" "),e("div",{staticClass:"language-crystal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-crystal"}},[e("code",[e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("EnglishRule")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("<")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Rule")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("def")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token method-definition"}},[e("span",{pre:!0,attrs:{class:"token function"}},[t._v("apply")])]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("count "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Float")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("|")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Int")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token builtin"}},[t._v("Symbol")]),t._v("\n    count "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("==")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":one")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":other")]),t._v("\n  "),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n"),e("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("end")]),t._v("\n")])])]),e("p",[t._v('Once implemented, custom pluralization rules have to be "registered" to Crystal I18n by using the '),e("a",{attrs:{href:"/ref/I18n/Pluralization.html#register_rule(locale:String|Symbol,rule_klass:Rule.class)-class-method",target:"_blank"}},[e("code",[t._v("I18n::Pluralization#register_rule")])]),t._v(" method. For example the above pluralization rule could be registered to Crystal I18n as follows:")]),t._v(" "),e("div",{staticClass:"language-crystal extra-class"},[e("pre",{pre:!0,attrs:{class:"language-crystal"}},[e("code",[e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("I18n")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(":")]),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("Pluralization")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("register_rule"),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),e("span",{pre:!0,attrs:{class:"token symbol"}},[t._v(":en")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),e("span",{pre:!0,attrs:{class:"token constant"}},[t._v("EnglishRule")]),e("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])])]),e("p",[t._v("Then, every time pluralized translations need to be generated for the "),e("code",[t._v("en")]),t._v(" locale, the registerd pluralization rule will\nbe used automatically by Crystal I18n.")])])}),[],!1,null,null,null);a.default=n.exports}}]);