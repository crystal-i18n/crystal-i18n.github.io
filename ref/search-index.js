crystal_doc_search_index_callback({"repository_name":"i18n","body":"# Crystal I18n\n\n![logo](https://raw.githubusercontent.com/crystal-i18n/i18n/main/docs/src/.vuepress/public/assets/img/hero.svg)\n\n[![Version](https://img.shields.io/github/v/tag/crystal-i18n/i18n)](https://github.com/crystal-i18n/i18n/tags)\n[![License](https://img.shields.io/github/license/crystal-i18n/i18n)](https://github.com/crystal-i18n/i18n/blob/main/LICENSE)\n[![CI](https://github.com/crystal-i18n/i18n/workflows/CI/badge.svg)](https://github.com/crystal-i18n/i18n/actions)\n\n---\n\n**Crystal I18n** is an internationalization library for the Crystal programming language. It provides a unified interface \nallowing to leverage translations and localized contents in a Crystal project.\n\nFeatures:\n\n* Translation lookups\n* Localization\n* Interpolation\n* Pluralization rules\n* Locale fallbacks\n* Flexible configuration\n\n## Documentation\n\nOnline browsable documentation is available at https://crystal-i18n.github.io/.\n\n## Installation\n\nSimply add the following entry to your project's `shard.yml`:\n\n```yaml\ndependencies:\n  i18n:\n    github: crystal-i18n/i18n\n```\n\nAnd run `shards install` afterwards.\n\n## Usage\n\nAssuming that a `config/locales` relative folder exists in your project, with the following `en.yml` file in it:\n\n```yaml\nen:\n  simple:\n    translation: \"This is a simple translation\"\n    interpolation: \"Hello, %{name}!\"\n    pluralization:\n      one: \"One item\"\n      other: \"%{count} items\"\n```\n\nThe following setup could be performed in order to initialize `I18n` properly:\n\n```crystal\nrequire \"i18n\"\n\nI18n.config.loaders << I18n::Loader::YAML.new(\"config/locales\")\nI18n.config.default_locale = :en\nI18n.init\n```\n\nHere a translation loader is configured to load the previous translation file while also configuring the default locale \n(`en`) and initializing the `I18n` module.\n\nTranslations lookups can now be performed using the `#translate` method (or the shorter version `#t`) as follows:\n\n```crystal\nI18n.t(\"simple.translation\")                     # outputs \"This is a simple translation\"\nI18n.t(\"simple.interpolation\", name: \"John Doe\") # outputs \"Hello, John Doe!\"\nI18n.t(\"simple.pluralization\", count: 42)        # outputs \"42 items\"\n```\n\nPlease head over to the [documentation](https://crystal-i18n.github.io/) for a more complete overview of the `I18n` \nmodule capabilities (including the configuration options, localization features, etc).\n\n## Authors\n\nMorgan Aubert ([@ellmetha](https://github.com/ellmetha)) and \n[contributors](https://github.com/crystal-i18n/i18n/contributors).\n\n## Credits\n\nCrystal I18n initially draws its inspiration from [Ruby I18n](https://github.com/ruby-i18n/i18n) and \n[rails-i18n](https://github.com/svenfuchs/rails-i18n). Originally, pluralization and localization rules all come from\n[rails-i18n](https://github.com/svenfuchs/rails-i18n) as well.\n\n## License\n\nMIT. See ``LICENSE`` for more details.\n","program":{"html_id":"i18n/toplevel","path":"toplevel.html","kind":"module","full_name":"Top Level Namespace","name":"Top Level Namespace","abstract":false,"superclass":null,"ancestors":[],"locations":[],"repository_name":"i18n","program":true,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n","path":"I18n.html","kind":"module","full_name":"I18n","name":"I18n","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n.cr","line_number":62,"url":null},{"filename":"src/i18n/catalog.cr","line_number":1,"url":null},{"filename":"src/i18n/config.cr","line_number":1,"url":null},{"filename":"src/i18n/errors.cr","line_number":1,"url":null},{"filename":"src/i18n/loader/base.cr","line_number":1,"url":null},{"filename":"src/i18n/loader/json.cr","line_number":1,"url":null},{"filename":"src/i18n/loader/yaml.cr","line_number":1,"url":null},{"filename":"src/i18n/locale/fallbacks.cr","line_number":1,"url":null},{"filename":"src/i18n/locale/tag.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/arabic.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/breton.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/central_morocco_tamazight.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/colognian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/east_slavic.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/irish.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/langi.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/latvian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/lithuanian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/macedonian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/maltese.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/manx.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/one_other.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/one_two_other.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/one_up_to_two_other.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/one_with_zero_other.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/other.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/polish.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/romanian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/scottish_gaelic.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/slovenian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/upper_sorbian.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/welsh.cr","line_number":1,"url":null},{"filename":"src/i18n/pluralization/rule/west_slavic.cr","line_number":1,"url":null},{"filename":"src/i18n/translation_hash.cr","line_number":1,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"VERSION","name":"VERSION","value":"\"0.1.5\"","doc":null,"summary":null}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":null,"doc":"The I18n module provides a simple interface for internationalization and localization.\n\n### Basic setup\n\nAssuming that a `config/locales` relative folder exists, with the following `en.yml` file in it:\n\n```\nen:\n  simple:\n    translation: \"This is a simple translation\"\n    interpolation: \"Hello, %{name}!\"\n    pluralization:\n      one: \"One item\"\n      other: \"%{count} items\"\n```\n\nThe following I18n setup could be defined:\n\n```\nrequire \"i18n\"\n\nI18n.config.loaders << I18n::Loader::YAML.new(\"config/locales\")\nI18n.init\n```\n\n### Translations lookups\n\nTranslations can be resolved using the `#translate` method (or the shorter version `#t`) and the `#translate!` method\n(or the shorter version `#t!`):\n\n```\nI18n.t(\"simple.translation\")                     # outputs \"This is a simple translation\"\nI18n.t(\"simple.interpolation\", name: \"John Doe\") # outputs \"Hello, John Doe!\"\nI18n.t(\"simple.pluralization\", count: 42)        # outputs \"42 items\"\n```\n\n### Localization\n\nIt is possible to localize date time objects using the `#localize` method (or the shorter version `#l`):\n\n```\nI18n.l(Time.local)                 # => Sun, 13 Dec 2020 21:11:08 -0500\nI18n.l(Time.local, :short)         # => 13 Dec 21:11\nI18n.l(Time.local.date)            # => 2020-12-13\nI18n.l(Time.local.date, :long)     # => December 13, 2020\nI18n.l(Time.local, \"%a, %d %b %Y\") # => Sun, 13 Dec 2020\n```\n","summary":"<p>The I18n module provides a simple interface for internationalization and localization.</p>","class_methods":[{"id":"activate(locale:String|Symbol):String-class-method","html_id":"activate(locale:String|Symbol):String-class-method","name":"activate","doc":"Activates a locale for translations.\n\nThis method allows to set the locale used to produce translated contents. Note that once activated, the current\nlocale will remain active until it's explicly changed again. `#with_locale` should be used instead of `#activate`\nfor cases where it is important to ensure that the previous active locale is restored.\n\nAn `I18n::Errors::InvalidLocale` exception will be raised by this method if the passed locale is not available in\nthe main catalog of translations (ie. if no translations were defined for the considered locale).","summary":"<p>Activates a locale for translations.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol) : String","args_html":"(locale : String | Symbol) : String","location":{"filename":"src/i18n.cr","line_number":75,"url":null},"def":{"name":"activate","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.activate(locale)"}},{"id":"available_locales:Array(String)-class-method","html_id":"available_locales:Array(String)-class-method","name":"available_locales","doc":"Returns the available locales.\n\nIf no translations have been loaded yet, an array with the default locale in it will be returned.","summary":"<p>Returns the available locales.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/i18n.cr","line_number":82,"url":null},"def":{"name":"available_locales","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"catalog.available_locales"}},{"id":"config:Config-class-method","html_id":"config:Config-class-method","name":"config","doc":"Returns the main configuration object.\n\nThis methods return the main `I18n::Config` object used by the `I18n` module to persist configuration options.","summary":"<p>Returns the main configuration object.</p>","abstract":false,"args":[],"args_string":" : Config","args_html":" : <a href=\"I18n/Config.html\">Config</a>","location":{"filename":"src/i18n.cr","line_number":89,"url":null},"def":{"name":"config","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config","visibility":"Public","body":"@@config || (@@config = Config.new)"}},{"id":"config=(config:Config):Config-class-method","html_id":"config=(config:Config):Config-class-method","name":"config=","doc":"Allows to replace the main configuration object.\n\nThis method will replace the main configuration object used by the `I18n` module but will not change the main\ncatalog of translation. Calling `#init` once the new `I18n::Config` object has been assigned might be necessary in\norder to ensure that the main catalog of translations used by the `I18n` module is reinitialized.","summary":"<p>Allows to replace the main configuration object.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"args_string":"(config : Config) : Config","args_html":"(config : <a href=\"I18n/Config.html\">Config</a>) : <a href=\"I18n/Config.html\">Config</a>","location":{"filename":"src/i18n.cr","line_number":98,"url":null},"def":{"name":"config=","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Config","visibility":"Public","body":"@@config = config"}},{"id":"init:Nil-class-method","html_id":"init:Nil-class-method","name":"init","doc":"Initializes the `I18n` module.\n\nCalling this method at application startup is necessary in order to ensure that the configuration options that were\nset through the use of the `I18n::Config` object (returned by the `#config` method) are read in order to initialize\nthe main catalog of translations. Calling this will ensure that the translations files that were defined using\n`I18n::Config#loaders` are read and processed in order to allow further translations lookups.","summary":"<p>Initializes the <code><a href=\"I18n.html\">I18n</a></code> module.</p>","abstract":false,"args":[],"args_string":" : Nil","args_html":" : Nil","location":{"filename":"src/i18n.cr","line_number":108,"url":null},"def":{"name":"init","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"config.reset_translations_data\nFiber.current.i18n_catalog = Catalog.from_config(config)\n"}},{"id":"l(object:Number,format:String|Symbol=:default):String-class-method","html_id":"l(object:Number,format:String|Symbol=:default):String-class-method","name":"l","doc":"Alias for `#localize`.","summary":"<p>Alias for <code><a href=\"I18n.html#localize(object:Number,format:String%7CSymbol=:default):String-class-method\">#localize</a></code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","args_html":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","location":{"filename":"src/i18n.cr","line_number":114,"url":null},"def":{"name":"l","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"localize(object, format)"}},{"id":"l(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-class-method","html_id":"l(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-class-method","name":"l","doc":"Alias for `#localize`.","summary":"<p>Alias for <code><a href=\"I18n.html#localize(object:Number,format:String%7CSymbol=:default):String-class-method\">#localize</a></code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","args_html":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":119,"url":null},"def":{"name":"l","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"localize(object, format, **kwargs)"}},{"id":"locale:String-class-method","html_id":"locale:String-class-method","name":"locale","doc":"Returns the currently active locale.\n\nThe returned value will default to the default locale unless another locale is explicitly activated.","summary":"<p>Returns the currently active locale.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n.cr","line_number":130,"url":null},"def":{"name":"locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.locale"}},{"id":"locale=(locale:String|Symbol):String-class-method","html_id":"locale=(locale:String|Symbol):String-class-method","name":"locale=","doc":"Alias for `#activate`.","summary":"<p>Alias for <code><a href=\"I18n.html#activate(locale:String%7CSymbol):String-class-method\">#activate</a></code>.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol) : String","args_html":"(locale : String | Symbol) : String","location":{"filename":"src/i18n.cr","line_number":135,"url":null},"def":{"name":"locale=","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.activate(locale)"}},{"id":"localize(object:Number,format:String|Symbol=:default):String-class-method","html_id":"localize(object:Number,format:String|Symbol=:default):String-class-method","name":"localize","doc":"Localizes a number.\n\nThis method allows to localize a `Number` object (such as an integer or a float). By default, the `:default` format\nis used, but custom formats can be used as well:\n\n```\nI18n.localize(123_456.789)          # => 123,456.789\nI18n.localize(123_456.789, :custom) # => 123,456.79\n```","summary":"<p>Localizes a number.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","args_html":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","location":{"filename":"src/i18n.cr","line_number":148,"url":null},"def":{"name":"localize","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.localize(object, format)"}},{"id":"localize(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-class-method","html_id":"localize(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-class-method","name":"localize","doc":"Localizes a datetime or a date.\n\nThis method allows to localize a `Time` object or a `Tuple(Int32, Int32, Int32)` object (which correspond to a date\nobtained through the use of `Time#date`). Both time or \"date\" objects can be localized using a predefined format\nsuch as `:default`, `:short` or `:long`, but custom formats can be used as well:\n\n```\nI18n.localize(Time.local)                 # => Sun, 13 Dec 2020 21:11:08 -0500\nI18n.localize(Time.local, :short)         # => 13 Dec 21:11\nI18n.localize(Time.local.date)            # => 2020-12-13\nI18n.localize(Time.local.date, :long)     # => December 13, 2020\nI18n.localize(Time.local, \"%a, %d %b %Y\") # => Sun, 13 Dec 2020\n```","summary":"<p>Localizes a datetime or a date.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","args_html":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":165,"url":null},"def":{"name":"localize","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.localize(object, format, **kwargs)"}},{"id":"t(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","html_id":"t(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","name":"t","doc":"Alias for `#translate`.","summary":"<p>Alias for <code><a href=\"I18n.html#translate(key:String%7CSymbol,params:Hash%7CNamedTuple%7CNil=nil,count:Float%7CInt%7CNil=nil,scope:Array(String%7CSymbol)%7CString%7CSymbol%7CNil=nil,default=nil,**kwargs):String-class-method\">#translate</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":174,"url":null},"def":{"name":"t","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"translate(key, params, count, scope, default, **kwargs)"}},{"id":"t!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","html_id":"t!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","name":"t!","doc":"Alias for `#translate!`.","summary":"<p>Alias for <code><a href=\"I18n.html#translate!(key:String%7CSymbol,params:Hash%7CNamedTuple%7CNil=nil,count:Float%7CInt%7CNil=nil,scope:Array(String%7CSymbol)%7CString%7CSymbol%7CNil=nil,default=nil,**kwargs):String-class-method\">#translate!</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":186,"url":null},"def":{"name":"t!","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"translate!(key, params, count, scope, default, **kwargs)"}},{"id":"translate(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","html_id":"translate(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","name":"translate","doc":"Performs a translation lookup.\n\nThis method performs a translation lookup for a given `key`. If no translation can be found for the given `key`, a\ndefault string stating that the translation is missing will be returned.\n\n```\nI18n.translate(\"simple.translation\")               # => \"Simple translation\"\nI18n.translate(\"hello.user\", name: \"John\")         # => \"Hello John!\"\nI18n.translate(:blank, scope: \"error.username\")    # => \"Username cannot be blank\"\nI18n.translate(:blank, scope: [:error, :username]) # => \"Username cannot be blank\"\n```","summary":"<p>Performs a translation lookup.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":208,"url":null},"def":{"name":"translate","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.translate(key, params, count, scope, default, **kwargs)"}},{"id":"translate!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","html_id":"translate!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-class-method","name":"translate!","doc":"Performs a translation lookup.\n\nThis method performs a translation lookup for a given `key`. If no translation can be found for the given `key`,\nan `I18n::Errors::MissingTranslation` exception will be raised.\n\n```\nI18n.translate!(\"simple.translation\")               # => \"Simple translation\"\nI18n.translate!(\"hello.user\", name: \"John\")         # => \"Hello John!\"\nI18n.translate!(:blank, scope: \"error.username\")    # => \"Username cannot be blank\"\nI18n.translate!(:blank, scope: [:error, :username]) # => \"Username cannot be blank\"\n```","summary":"<p>Performs a translation lookup.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n.cr","line_number":230,"url":null},"def":{"name":"translate!","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"catalog.translate!(key, params, count, scope, default, **kwargs)"}},{"id":"with_locale(locale:String|Symbol,&)-class-method","html_id":"with_locale(locale:String|Symbol,&)-class-method","name":"with_locale","doc":"Allows to activate a specific locale for a specific block.\n\nThis method allows to activate a specific locale for a specific block, ensuring that the change of locale does not\nleak outside of the block. When the block execution completes, the locale that was previously activated prior to the\nblock execution will be automatically activated again:\n\n```\nI18n.config.default_locale # outputs \"en\"\nI18n.with_locale(:es) do\n  I18n.translate!(\"test.translation\") # outputs a spanish translation\nend\nI18n.translate!(\"test.translation\") # outputs an english translation\n```\n\nAn `I18n::Errors::InvalidLocale` exception will be raised by this method if the passed locale is not available in\n(ie. if no translations were defined for this locale).","summary":"<p>Allows to activate a specific locale for a specific block.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol, &)","args_html":"(locale : String | Symbol, &)","location":{"filename":"src/i18n.cr","line_number":257,"url":null},"def":{"name":"with_locale","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"catalog.with_locale(locale) do\n  yield\nend"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Catalog","path":"I18n/Catalog.html","kind":"class","full_name":"I18n::Catalog","name":"Catalog","abstract":false,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/catalog.cr","line_number":6,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[{"id":"DEFAULT_LOCALE","name":"DEFAULT_LOCALE","value":"\"en\"","doc":"The default locale that is considered when no other locales are configured nor activated.","summary":"<p>The default locale that is considered when no other locales are configured nor activated.</p>"}],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"A catalog of translations.\n\nCatalogs of translations hold all the translations for multiple locales and provide the ability to activate specific\nlocales in order to define in which locales the translated strings should be returned.","summary":"<p>A catalog of translations.</p>","class_methods":[],"constructors":[{"id":"from_config(config:Config):self-class-method","html_id":"from_config(config:Config):self-class-method","name":"from_config","doc":"Initializes a new catalog from a specific configuration object.\n\nThis class methods provides the ability to initialize a new catalog of translation from an existing `I18n::Config`\nobject: all the configuration options set on this object will be used to intialize the new catalog of\ntranslations.","summary":"<p>Initializes a new catalog from a specific configuration object.</p>","abstract":false,"args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"args_string":"(config : Config) : <span class=\"k\">self</span>","args_html":"(config : <a href=\"../I18n/Config.html\">Config</a>) : <span class=\"k\">self</span>","location":{"filename":"src/i18n/catalog.cr","line_number":29,"url":null},"def":{"name":"from_config","args":[{"name":"config","doc":null,"default_value":"","external_name":"config","restriction":"Config"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self","visibility":"Public","body":"catalog = new(default_locale: config.default_locale, available_locales: config.available_locales, fallbacks: config.fallbacks)\ncatalog.inject_normalized(config.translations_data, config.normalized_translations)\ncatalog\n"}},{"id":"new(default_locale:String=DEFAULT_LOCALE,available_locales:Array(String)?=nil,fallbacks:Locale::Fallbacks?=nil)-class-method","html_id":"new(default_locale:String=DEFAULT_LOCALE,available_locales:Array(String)?=nil,fallbacks:Locale::Fallbacks?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"default_locale","doc":null,"default_value":"DEFAULT_LOCALE","external_name":"default_locale","restriction":"String"},{"name":"available_locales","doc":null,"default_value":"nil","external_name":"available_locales","restriction":"Array(String) | Nil"},{"name":"fallbacks","doc":null,"default_value":"nil","external_name":"fallbacks","restriction":"Locale::Fallbacks | Nil"}],"args_string":"(default_locale : String = <span class=\"t\">DEFAULT_LOCALE</span>, available_locales : Array(String)? = <span class=\"n\">nil</span>, fallbacks : Locale::Fallbacks? = <span class=\"n\">nil</span>)","args_html":"(default_locale : String = <span class=\"t\">DEFAULT_LOCALE</span>, available_locales : Array(String)? = <span class=\"n\">nil</span>, fallbacks : <a href=\"../I18n/Locale/Fallbacks.html\">Locale::Fallbacks</a>? = <span class=\"n\">nil</span>)","location":{"filename":"src/i18n/catalog.cr","line_number":41,"url":null},"def":{"name":"new","args":[{"name":"default_locale","doc":null,"default_value":"DEFAULT_LOCALE","external_name":"default_locale","restriction":"String"},{"name":"available_locales","doc":null,"default_value":"nil","external_name":"available_locales","restriction":"Array(String) | Nil"},{"name":"fallbacks","doc":null,"default_value":"nil","external_name":"fallbacks","restriction":"Locale::Fallbacks | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(default_locale, available_locales, fallbacks)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"activate(locale:String|Symbol):String-instance-method","html_id":"activate(locale:String|Symbol):String-instance-method","name":"activate","doc":"Activates a locale for translations.\n\nThis method allows to set the locale used to produce translated contents. Note that once activated, the current\nlocale will remain active until it's explicly changed again. `#with_locale` should be used instead of `#activate`\nfor cases where it is important to ensure that the previous active locale is restored.\n\nAn `I18n::Errors::InvalidLocale` exception will be raised by this method if the passed locale is not available in\nthe catalog (ie. if no translations was injected into this catalog for the considered locale).","summary":"<p>Activates a locale for translations.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol) : String","args_html":"(locale : String | Symbol) : String","location":{"filename":"src/i18n/catalog.cr","line_number":60,"url":null},"def":{"name":"activate","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"raise_if_locale_not_available(locale)\n@locale = locale.to_s\n"}},{"id":"available_locales:Array(String)-instance-method","html_id":"available_locales:Array(String)-instance-method","name":"available_locales","doc":"Returns the available locales for the catalog.\n\nIf no translations have injected into the catalog of translations yet, an array with the default locale in it will\nbe returned.","summary":"<p>Returns the available locales for the catalog.</p>","abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/i18n/catalog.cr","line_number":69,"url":null},"def":{"name":"available_locales","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"@available_locales.empty? ? [default_locale] : @available_locales"}},{"id":"default_locale:String-instance-method","html_id":"default_locale:String-instance-method","name":"default_locale","doc":"Returns the default locale used by the catalog.","summary":"<p>Returns the default locale used by the catalog.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n/catalog.cr","line_number":17,"url":null},"def":{"name":"default_locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_locale"}},{"id":"inject(loader:Loader::Base):Nil-instance-method","html_id":"inject(loader:Loader::Base):Nil-instance-method","name":"inject","doc":"Injects the hash of translations returned by a specific loader.","summary":"<p>Injects the hash of translations returned by a specific loader.</p>","abstract":false,"args":[{"name":"loader","doc":null,"default_value":"","external_name":"loader","restriction":"Loader::Base"}],"args_string":"(loader : Loader::Base) : Nil","args_html":"(loader : <a href=\"../I18n/Loader/Base.html\">Loader::Base</a>) : Nil","location":{"filename":"src/i18n/catalog.cr","line_number":74,"url":null},"def":{"name":"inject","args":[{"name":"loader","doc":null,"default_value":"","external_name":"loader","restriction":"Loader::Base"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"inject(loader.load)"}},{"id":"inject(translations:TranslationsHash):Nil-instance-method","html_id":"inject(translations:TranslationsHash):Nil-instance-method","name":"inject","doc":"Injects a hash of translations into the catalog.\n\nThis method can be used to inject a hash of loaded translations into a specific catalog. This is mainly useful if\na custom catalog is created manually:\n\n```\nloader = I18n::Loader::YAML.new(\"config/locales\")\ncatalog = I18n::Catalog.new\ncatalog.inject(loader.load)\n```","summary":"<p>Injects a hash of translations into the catalog.</p>","abstract":false,"args":[{"name":"translations","doc":null,"default_value":"","external_name":"translations","restriction":"TranslationsHash"}],"args_string":"(translations : TranslationsHash) : Nil","args_html":"(translations : <a href=\"../I18n/TranslationsHash.html\">TranslationsHash</a>) : Nil","location":{"filename":"src/i18n/catalog.cr","line_number":88,"url":null},"def":{"name":"inject","args":[{"name":"translations","doc":null,"default_value":"","external_name":"translations","restriction":"TranslationsHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Nil","visibility":"Public","body":"effective_translations = translations.select do |locale, _|\n  @available_locales_restricted_to.empty? || (@available_locales_restricted_to.includes?(locale))\nend\nself.class.normalize_hash(effective_translations, @translations)\ntranslations.keys.each do |locale|\n  if !(@available_locales.includes?(locale))\n    @available_locales << locale\n  end\nend\n"}},{"id":"l(object:Number,format:String|Symbol=:default):String-instance-method","html_id":"l(object:Number,format:String|Symbol=:default):String-instance-method","name":"l","doc":"Alias for `#localize`.","summary":"<p>Alias for <code><a href=\"../I18n/Catalog.html#localize(object:Number,format:String%7CSymbol=:default):String-instance-method\">#localize</a></code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","args_html":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","location":{"filename":"src/i18n/catalog.cr","line_number":101,"url":null},"def":{"name":"l","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"localize(object, format)"}},{"id":"l(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-instance-method","html_id":"l(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-instance-method","name":"l","doc":"Alias for `#localize`.","summary":"<p>Alias for <code><a href=\"../I18n/Catalog.html#localize(object:Number,format:String%7CSymbol=:default):String-instance-method\">#localize</a></code>.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","args_html":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":106,"url":null},"def":{"name":"l","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"localize(object, format, **kwargs)"}},{"id":"locale:String-instance-method","html_id":"locale:String-instance-method","name":"locale","doc":"Returns the currently active locale.\n\nThe returned value will default to the default locale unless another locale is explicitly activated.","summary":"<p>Returns the currently active locale.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n/catalog.cr","line_number":117,"url":null},"def":{"name":"locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"@locale || (@locale = @default_locale)"}},{"id":"locale=(locale:String|Symbol):String-instance-method","html_id":"locale=(locale:String|Symbol):String-instance-method","name":"locale=","doc":"Alias for `#activate`.","summary":"<p>Alias for <code><a href=\"../I18n/Catalog.html#activate(locale:String%7CSymbol):String-instance-method\">#activate</a></code>.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol) : String","args_html":"(locale : String | Symbol) : String","location":{"filename":"src/i18n/catalog.cr","line_number":122,"url":null},"def":{"name":"locale=","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"activate(locale)"}},{"id":"localize(object:Number,format:String|Symbol=:default):String-instance-method","html_id":"localize(object:Number,format:String|Symbol=:default):String-instance-method","name":"localize","doc":"Localizes a number.\n\nThis method allows to localize a `Number` object (such as an integer or a float). By default, the `:default`\nformat is used:\n\n```\nI18n.localize(123_456.789) # => 123,456.789\n```\n\nCustom formats can be used as well, for example:\n\n```\nI18n.localize(123_456.789, :custom) # => 123,456.79\n```\n\nThis method requires the following structure to be defined in localization files (the following example uses YAML,\nbut this can be easily applied to JSON files too):\n\n```\nen:\n  i18n:\n    number:\n      formats:\n        default:\n          delimiter: \",\"\n          separator: \".\"\n          decimal_places: 3\n          group: 3\n          only_significant: false\n````\n\nCustom formats can be defined under `i18n.number.formats` in order to use other combinations of delimiters,\nseparators, decimal places, etc.","summary":"<p>Localizes a number.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","args_html":"(object : Number, format : String | Symbol = <span class=\"n\">:default</span>) : String","location":{"filename":"src/i18n/catalog.cr","line_number":159,"url":null},"def":{"name":"localize","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Number"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"separator = fetch_translation(locale, \"i18n.number.formats.#{format}.separator\")\ndelimiter = fetch_translation(locale, \"i18n.number.formats.#{format}.delimiter\")\ndecimal_places = fetch_translation(locale, \"i18n.number.formats.#{format}.decimal_places\")\ngroup = fetch_translation(locale, \"i18n.number.formats.#{format}.group\")\nonly_significant = fetch_translation(locale, \"i18n.number.formats.#{format}.only_significant\")\nobject.format(separator: (separator.as?(String)) || '.', delimiter: (delimiter.as?(String)) || ',', decimal_places: decimal_places.as?(Int32), group: (group.as?(Int32)) || 3, only_significant: (only_significant.as?(Bool)) || false)\n"}},{"id":"localize(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-instance-method","html_id":"localize(object:Time|Tuple(Int32,Int32,Int32),format:String|Symbol=:default,**kwargs):String-instance-method","name":"localize","doc":"Localizes a datetime or a date.\n\nThis method allows to localize a `Time` object or a `Tuple(Int32, Int32, Int32)` object (which correspond to a\ndate obtained through the use of `Time#date`). Both time or \"date\" objects can be localized using a predefined\nformat such as `:default`, `:short` or `:long`:\n\n```\nI18n.localize(Time.local)             # => Sun, 13 Dec 2020 21:11:08 -0500\nI18n.localize(Time.local, :short)     # => 13 Dec 21:11\nI18n.localize(Time.local.date)        # => 2020-12-13\nI18n.localize(Time.local.date, :long) # => December 13, 2020\n```\n\nCustom format strings can be specified too. For example:\n\n```\nI18n.localize(Time.local, \"%a, %d %b %Y\") # => Sun, 13 Dec 2020\n```\n\nThis method requires the following structure to be defined in localization files (the following example uses YAML,\nbut this can easily be applied to JSON files too):\n\n```\nen:\n  i18n:\n    date:\n      abbr_day_names: [Mon, Tue, Wed, Thu, Fri, Sat, Sun]\n      abbr_month_names: [Jan, Feb, Mar, Apr, May, Jun, Jul, Aug, Sep, Oct, Nov, Dec]\n      day_names: [Monday, Tuesday, Wednesday, Thursday, Friday, Saturday, Sunday]\n      month_names: [January, February, March, April, May, June,\n                    July, August, September, October, November, December]\n      formats:\n        default: \"%Y-%m-%d\"\n        long: \"%B %d, %Y\"\n        short: \"%b %d\"\n    time:\n      am: am\n      formats:\n        default: \"%a, %d %b %Y %H:%M:%S %z\"\n        long: \"%B %d, %Y %H:%M\"\n        short: \"%d %b %H:%M\"\n      pm: pm\n```","summary":"<p>Localizes a datetime or a date.</p>","abstract":false,"args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"args_string":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","args_html":"(object : Time | Tuple(Int32, Int32, Int32), format : String | Symbol = <span class=\"n\">:default</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":218,"url":null},"def":{"name":"localize","args":[{"name":"object","doc":null,"default_value":"","external_name":"object","restriction":"Time | Tuple(Int32, Int32, Int32)"},{"name":"format","doc":null,"default_value":":default","external_name":"format","restriction":"String | Symbol"}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"type = object.is_a?(Time) ? \"time\" : \"date\"\nformat = begin\n  t!(\"i18n.#{type}.formats.#{format}\", **kwargs)\nrescue Errors::MissingTranslation\n  format\nend\nif !object.is_a?(Time)\n  object = Time.local(year: object[0], month: object[1], day: object[2])\nend\nformat = format.to_s.gsub(/%(|\\^)[aAbBpP]/) do |match|\n  case match\n  when \"%a\"\n    t!(\"i18n.date.abbr_day_names.#{object.day_of_week.to_i - 1}\")\n  when \"%^a\"\n    (t!(\"i18n.date.abbr_day_names.#{object.day_of_week.to_i - 1}\")).upcase\n  when \"%A\"\n    t!(\"i18n.date.day_names.#{object.day_of_week.to_i - 1}\")\n  when \"%^A\"\n    (t!(\"i18n.date.day_names.#{object.day_of_week.to_i - 1}\")).upcase\n  when \"%b\"\n    t!(\"i18n.date.abbr_month_names.#{object.month - 1}\")\n  when \"%^b\"\n    (t!(\"i18n.date.abbr_month_names.#{object.month - 1}\")).upcase\n  when \"%B\"\n    t!(\"i18n.date.month_names.#{object.month - 1}\")\n  when \"%^B\"\n    (t!(\"i18n.date.month_names.#{object.month - 1}\")).upcase\n  when \"%p\"\n    (t!(\"i18n.time.#{object.hour < 12 ? :am : :pm}\")).upcase\n  when \"%P\"\n    (t!(\"i18n.time.#{object.hour < 12 ? :am : :pm}\")).downcase\n  end\nend\nobject.to_s(format)\n"}},{"id":"t(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","html_id":"t(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","name":"t","doc":"Alias for `#translate`.","summary":"<p>Alias for <code><a href=\"../I18n/Catalog.html#translate(key:String%7CSymbol,params:Hash%7CNamedTuple%7CNil=nil,count:Float%7CInt%7CNil=nil,scope:Array(String%7CSymbol)%7CString%7CSymbol%7CNil=nil,default=nil,**kwargs):String-instance-method\">#translate</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":251,"url":null},"def":{"name":"t","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"translate(key, params, count, scope, default, **kwargs)"}},{"id":"t!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","html_id":"t!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","name":"t!","doc":"Alias for `#translate!`.","summary":"<p>Alias for <code><a href=\"../I18n/Catalog.html#translate!(key:String%7CSymbol,params:Hash%7CNamedTuple%7CNil=nil,count:Float%7CInt%7CNil=nil,scope:Array(String%7CSymbol)%7CString%7CSymbol%7CNil=nil,default=nil,**kwargs):String-instance-method\">#translate!</a></code>.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":263,"url":null},"def":{"name":"t!","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"translate!(key, params, count, scope, default, **kwargs)"}},{"id":"translate(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","html_id":"translate(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","name":"translate","doc":"Performs a translation lookup.\n\nThis method performs a translation lookup for a given `key`. If no translation can be found for the given `key`, a\ndefault string stating that the translation is missing will be returned.\n\n```\ncatalog.translate(\"simple.translation\")               # => \"Simple translation\"\ncatalog.translate(\"hello.user\", name: \"John\")         # => \"Hello John!\"\ncatalog.translate(:blank, scope: \"error.username\")    # => \"Username cannot be blank\"\ncatalog.translate(:blank, scope: [:error, :username]) # => \"Username cannot be blank\"\n```","summary":"<p>Performs a translation lookup.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":285,"url":null},"def":{"name":"translate","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"begin\n  translate!(key, params, count, scope, default, **kwargs)\nrescue error : Errors::MissingTranslation\n  error.message.to_s\nend"}},{"id":"translate!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","html_id":"translate!(key:String|Symbol,params:Hash|NamedTuple|Nil=nil,count:Float|Int|Nil=nil,scope:Array(String|Symbol)|String|Symbol|Nil=nil,default=nil,**kwargs):String-instance-method","name":"translate!","doc":"Performs a translation lookup.\n\nThis method performs a translation lookup for a given `key`. If no translation can be found for the given `key`,\nan `I18n::Errors::MissingTranslation` exception will be raised.\n\n```\ncatalog.translate!(\"simple.translation\")               # => \"Simple translation\"\ncatalog.translate!(\"hello.user\", name: \"John\")         # => \"Hello John!\"\ncatalog.translate!(:blank, scope: \"error.username\")    # => \"Username cannot be blank\"\ncatalog.translate!(:blank, scope: [:error, :username]) # => \"Username cannot be blank\"\n```","summary":"<p>Performs a translation lookup.</p>","abstract":false,"args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"args_string":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","args_html":"(key : String | Symbol, params : Hash | NamedTuple | Nil = <span class=\"n\">nil</span>, count : Float | Int | Nil = <span class=\"n\">nil</span>, scope : Array(String | Symbol) | String | Symbol | Nil = <span class=\"n\">nil</span>, default = <span class=\"n\">nil</span>, **kwargs) : String","location":{"filename":"src/i18n/catalog.cr","line_number":309,"url":null},"def":{"name":"translate!","args":[{"name":"key","doc":null,"default_value":"","external_name":"key","restriction":"String | Symbol"},{"name":"params","doc":null,"default_value":"nil","external_name":"params","restriction":"Hash | NamedTuple | Nil"},{"name":"count","doc":null,"default_value":"nil","external_name":"count","restriction":"Float | Int | Nil"},{"name":"scope","doc":null,"default_value":"nil","external_name":"scope","restriction":"Array(String | Symbol) | String | Symbol | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":""}],"double_splat":{"name":"kwargs","doc":null,"default_value":"","external_name":"kwargs","restriction":""},"splat_index":null,"yields":null,"block_arg":null,"return_type":"String","visibility":"Public","body":"if scope.is_a?(Array)\n  key = scope.reverse.reduce(key) do |k, part|\n    suffix_key(part.to_s, k)\n  end\nelse\n  if !scope.nil?\n    key = suffix_key(scope.to_s, key)\n  end\nend\nentry = (fetch_translation!(locale, key, count: count, default: default)).not_nil!.to_s\nif count.nil?\nelse\n  entry = interpolate(entry, \"count\", count)\nend\nif !params.nil?\n  params.each do |variable_name, value|\n    entry = interpolate(entry, variable_name, value)\n  end\nend\nkwargs.each do |variable_name, value|\n  entry = interpolate(entry, variable_name, value)\nend\nentry\n"}},{"id":"with_locale(locale:String|Symbol,&)-instance-method","html_id":"with_locale(locale:String|Symbol,&)-instance-method","name":"with_locale","doc":"Allows to activate a specific locale for a specific block.\n\nThis method allows to activate a specific locale for a specific block, ensuring that the change of locale does not\nleak outside of the block. When the block execution completes, the locale that was previously activated prior to\nthe block execution will be automatically activated again:\n\n```\ncatalog = I18n::Catalog.new(default_locale: \"en\")\ncatalog.with_locale(:es) do\n  catalog.translate!(\"test.translation\") # outputs a spanish translation\nend\ncatalog.translate!(\"test.translation\") # outputs an english translation\n```\n\nAn `I18n::Errors::InvalidLocale` exception will be raised by this method if the passed locale is not available in\nthe catalog (ie. if no translations was injected into this catalog for the considered locale).","summary":"<p>Allows to activate a specific locale for a specific block.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol, &)","args_html":"(locale : String | Symbol, &)","location":{"filename":"src/i18n/catalog.cr","line_number":356,"url":null},"def":{"name":"with_locale","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":0,"block_arg":null,"return_type":"","visibility":"Public","body":"begin\n  current_locale = @locale\n  self.locale = locale\n  yield\nensure\n  self.locale = current_locale || default_locale\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Config","path":"I18n/Config.html","kind":"class","full_name":"I18n::Config","name":"Config","abstract":false,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/config.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"The main I18n configuration class.\n\nThis class holds all the configuration options of crystal-i18n. It is mainly used in order to initialize the global\ncatalog of translations (used in the context of `I18n#translate` for example) ; but it can also be used to\nconfigure a custom catalog of translations through the use of the `I18n::Catalog#from_config` class method.","summary":"<p>The main I18n configuration class.</p>","class_methods":[],"constructors":[{"id":"new-class-method","html_id":"new-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[],"args_string":"","args_html":"","location":{"filename":"src/i18n/config.cr","line_number":55,"url":null},"def":{"name":"new","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"available_locales:Array(String)?-instance-method","html_id":"available_locales:Array(String)?-instance-method","name":"available_locales","doc":"Returns the available locales.\n\nUnless explicitly set, the default value will be `nil`.","summary":"<p>Returns the available locales.</p>","abstract":false,"args":[],"args_string":" : Array(String)?","args_html":" : Array(String)?","location":{"filename":"src/i18n/config.cr","line_number":16,"url":null},"def":{"name":"available_locales","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@available_locales"}},{"id":"available_locales=(available_locales:Array(String|Symbol)?)-instance-method","html_id":"available_locales=(available_locales:Array(String|Symbol)?)-instance-method","name":"available_locales=","doc":"Allows to set the available locales.\n\nSetting available locales will force catalog of translations to only load and handle translations for the\nspecified set of locales. If an empty array or a `nil` value is passed to this method, then no restrictions will\nbe applied to the associated catalog of translations.","summary":"<p>Allows to set the available locales.</p>","abstract":false,"args":[{"name":"available_locales","doc":null,"default_value":"","external_name":"available_locales","restriction":"Array(String | Symbol) | Nil"}],"args_string":"(available_locales : Array(String | Symbol)?)","args_html":"(available_locales : Array(String | Symbol)?)","location":{"filename":"src/i18n/config.cr","line_number":66,"url":null},"def":{"name":"available_locales=","args":[{"name":"available_locales","doc":null,"default_value":"","external_name":"available_locales","restriction":"Array(String | Symbol) | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@available_locales = available_locales.nil? ? nil : available_locales.map(&.to_s)"}},{"id":"default_locale:String-instance-method","html_id":"default_locale:String-instance-method","name":"default_locale","doc":"Returns the default locale.\n\nUnless explicitly set, the default locale will be `\"en\"`.","summary":"<p>Returns the default locale.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n/config.cr","line_number":21,"url":null},"def":{"name":"default_locale","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_locale"}},{"id":"default_locale=(locale:String|Symbol)-instance-method","html_id":"default_locale=(locale:String|Symbol)-instance-method","name":"default_locale=","doc":"Allows to set the default locale.\n\nUnless explicitly set with this method, the default locale will be `\"en\"`.","summary":"<p>Allows to set the default locale.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol)","args_html":"(locale : String | Symbol)","location":{"filename":"src/i18n/config.cr","line_number":73,"url":null},"def":{"name":"default_locale=","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default_locale = locale.to_s"}},{"id":"fallbacks:I18n::Locale::Fallbacks?-instance-method","html_id":"fallbacks:I18n::Locale::Fallbacks?-instance-method","name":"fallbacks","doc":"Returns the configured locale fallbacks.\n\nUnless explicitly set, the default value will be `nil`.","summary":"<p>Returns the configured locale fallbacks.</p>","abstract":false,"args":[],"args_string":" : I18n::Locale::Fallbacks?","args_html":" : <a href=\"../I18n/Locale/Fallbacks.html\">I18n::Locale::Fallbacks</a>?","location":{"filename":"src/i18n/config.cr","line_number":26,"url":null},"def":{"name":"fallbacks","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fallbacks"}},{"id":"fallbacks=(fallbacks:Array(String|Symbol)|Hash(String|Symbol,Array(String|Symbol)|String|Symbol)|Locale::Fallbacks|NamedTuple|Nil)-instance-method","html_id":"fallbacks=(fallbacks:Array(String|Symbol)|Hash(String|Symbol,Array(String|Symbol)|String|Symbol)|Locale::Fallbacks|NamedTuple|Nil)-instance-method","name":"fallbacks=","doc":"Allows to set the locale fallbacks.\n\nSetting locale fallbacks will force catalogs of translations to try to lookup translations in other (configured)\nlocales if the current locale the translation is requested into is missing.\n\nThe passed `fallback` can be a hash or a named tuple that defines the chains of fallbacks to use for specific\nlocales. For example:\n\n```\nI18n.config.fallbacks = {\"en-CA\" => [\"en-US\", \"en\"], \"fr-CA\" => \"fr\"}\n```\n\nIt can also be a simple array of fallbacks. In that case, this chain of fallbacked locales will be used as a\ndefault for all the available locales when translations are missing:\n\n```\nI18n.config.fallbacks = [\"en-US\", \"en\"]\n```\n\nIt's also possible to specficy both default fallbacks and a mapping of fallbacks by initializing an\n`I18n::Locale::Fallbacks` object as follows:\n\n```\nI18n.config.fallbacks = I18n::Locale::Fallbacks.new(\n  {\"fr-CA-special\": [\"fr-CA\", \"fr\", \"en\"]},\n  default: [\"en\"]\n)\n```\n\nFinally, using `nil` in the context of this method will reset the configured fallbacks (and remove any previously\nconfigured fallbacks).\n\nIt's also important to always ensure that fallback locales are available locales: they should all be present in\nthe `#available_locales` array.","summary":"<p>Allows to set the locale fallbacks.</p>","abstract":false,"args":[{"name":"fallbacks","doc":null,"default_value":"","external_name":"fallbacks","restriction":"Array(String | Symbol) | Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | Locale::Fallbacks | NamedTuple | Nil"}],"args_string":"(fallbacks : Array(String | Symbol) | Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | Locale::Fallbacks | NamedTuple | Nil)","args_html":"(fallbacks : Array(String | Symbol) | Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | <a href=\"../I18n/Locale/Fallbacks.html\">Locale::Fallbacks</a> | NamedTuple | Nil)","location":{"filename":"src/i18n/config.cr","line_number":111,"url":null},"def":{"name":"fallbacks=","args":[{"name":"fallbacks","doc":null,"default_value":"","external_name":"fallbacks","restriction":"Array(String | Symbol) | Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | Locale::Fallbacks | NamedTuple | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@fallbacks = case fallbacks\nwhen Array\n  Locale::Fallbacks.new(default: fallbacks)\nwhen Hash, NamedTuple\n  Locale::Fallbacks.new(mapping: fallbacks)\nelse\n  fallbacks\nend"}},{"id":"loaders:Array(I18n::Loader::Base)-instance-method","html_id":"loaders:Array(I18n::Loader::Base)-instance-method","name":"loaders","doc":"Returns the array of configured translations loaders.\n\nTranslations loaders will be used to populate the catalog of translations (`I18n::Catalog` object) that is\ninitialized from this configuration object. Translations loaders are subclasses of `I18n::Loader::Base` and are\nused to extract raw translations from files (eg. yaml or json) or other sources.\n\nBy default, an empty array will be returned by this method. Loaders have to be explicitly appended to this array\nin order to be used to initialize associated catalog of translations. For example:\n\n```\nI18n.config.loaders << I18n::Loader::YAML.new(\"config/locales\")\n```","summary":"<p>Returns the array of configured translations loaders.</p>","abstract":false,"args":[],"args_string":" : Array(I18n::Loader::Base)","args_html":" : Array(<a href=\"../I18n/Loader/Base.html\">I18n::Loader::Base</a>)","location":{"filename":"src/i18n/config.cr","line_number":40,"url":null},"def":{"name":"loaders","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@loaders"}},{"id":"loaders=(loaders)-instance-method","html_id":"loaders=(loaders)-instance-method","name":"loaders=","doc":"Allows to set the array of configured translations loaders.\n\nTranslations loaders will be used to populate the catalog of translations (`I18n::Catalog` object) that is\ninitialized from this configuration object. Translations loaders are subclasses of `I18n::Loader::Base` and are\nused to extract raw translations from files (eg. yaml or json) or other sources.\n\n```\nI18n.config.loaders = [\n  I18n::Loader::YAML.new(\"config/locales\"),\n] of I18n::Loader::Base\n```","summary":"<p>Allows to set the array of configured translations loaders.</p>","abstract":false,"args":[{"name":"loaders","doc":null,"default_value":"","external_name":"loaders","restriction":""}],"args_string":"(loaders)","args_html":"(loaders)","location":{"filename":"src/i18n/config.cr","line_number":53,"url":null},"def":{"name":"loaders=","args":[{"name":"loaders","doc":null,"default_value":"","external_name":"loaders","restriction":""}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@loaders = loaders"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Errors","path":"I18n/Errors.html","kind":"module","full_name":"I18n::Errors","name":"Errors","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/errors.cr","line_number":2,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Errors/InvalidLocale","path":"I18n/Errors/InvalidLocale.html","kind":"class","full_name":"I18n::Errors::InvalidLocale","name":"InvalidLocale","abstract":false,"superclass":{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/errors.cr","line_number":4,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Errors","kind":"module","full_name":"I18n::Errors","name":"Errors"},"doc":"Represents an error raised when an attempt to set a non-supported locale is made.","summary":"<p>Represents an error raised when an attempt to set a non-supported locale is made.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/Errors/MissingTranslation","path":"I18n/Errors/MissingTranslation.html","kind":"class","full_name":"I18n::Errors::MissingTranslation","name":"MissingTranslation","abstract":false,"superclass":{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},"ancestors":[{"html_id":"i18n/Exception","kind":"class","full_name":"Exception","name":"Exception"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/errors.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Errors","kind":"module","full_name":"I18n::Errors","name":"Errors"},"doc":"Represents an error raised when a translation cannot be found in a catalog of translations.","summary":"<p>Represents an error raised when a translation cannot be found in a catalog of translations.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]},{"html_id":"i18n/I18n/Loader","path":"I18n/Loader.html","kind":"module","full_name":"I18n::Loader","name":"Loader","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/loader/base.cr","line_number":2,"url":null},{"filename":"src/i18n/loader/json.cr","line_number":2,"url":null},{"filename":"src/i18n/loader/yaml.cr","line_number":2,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Loader/Base","path":"I18n/Loader/Base.html","kind":"class","full_name":"I18n::Loader::Base","name":"Base","abstract":true,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/loader/base.cr","line_number":4,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"i18n/I18n/Loader/JSON","kind":"class","full_name":"I18n::Loader::JSON","name":"JSON"},{"html_id":"i18n/I18n/Loader/YAML","kind":"class","full_name":"I18n::Loader::YAML","name":"YAML"}],"including_types":[],"namespace":{"html_id":"i18n/I18n/Loader","kind":"module","full_name":"I18n::Loader","name":"Loader"},"doc":"Translations loader base class.","summary":"<p>Translations loader base class.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"load:TranslationsHash-instance-method","html_id":"load:TranslationsHash-instance-method","name":"load","doc":"Loads the translations targetted by the current loader.","summary":"<p>Loads the translations targetted by the current loader.</p>","abstract":true,"args":[],"args_string":" : TranslationsHash","args_html":" : <a href=\"../../I18n/TranslationsHash.html\">TranslationsHash</a>","location":{"filename":"src/i18n/loader/base.cr","line_number":6,"url":null},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TranslationsHash","visibility":"Public","body":""}}],"macros":[{"id":"embed(path)-macro","html_id":"embed(path)-macro","name":"embed","doc":"Allows to embed raw translations inside compiled binaries.\n\nThis macro is not implemented by default and is optional. Depending on the considered loader, and how / where\ntranslations are stored, this feature could implemented or not.","summary":"<p>Allows to embed raw translations inside compiled binaries.</p>","abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","location":{"filename":"src/i18n/loader/base.cr","line_number":12,"url":null},"def":{"name":"embed","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{% raise(\"Not implemented\") %}\n\n      \n"}}],"types":[]},{"html_id":"i18n/I18n/Loader/JSON","path":"I18n/Loader/JSON.html","kind":"class","full_name":"I18n::Loader::JSON","name":"JSON","abstract":false,"superclass":{"html_id":"i18n/I18n/Loader/Base","kind":"class","full_name":"I18n::Loader::Base","name":"Base"},"ancestors":[{"html_id":"i18n/I18n/Loader/Base","kind":"class","full_name":"I18n::Loader::Base","name":"Base"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/loader/json.cr","line_number":18,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Loader","kind":"module","full_name":"I18n::Loader","name":"Loader"},"doc":"The JSON translations loader.\n\nThis loader implementation allows to load translations from JSON files. It must be initialized from a given path\nand it will recursively try to load all the JSON files that are available under the targetted directory:\n\n```\nI18n.config.loaders << I18n::Loader::JSON.new(\"config/locales\")\n```\n\nThis loader also allows to embed the raw translations that are available under the targetted directory inside the\ncompiled binary through the use of the `#embed` macro:\n\n```\nI18n.config.loaders << I18n::Loader::JSON.embed(\"config/locales\")\n```","summary":"<p>The JSON translations loader.</p>","class_methods":[{"id":"normalize_raw_translations(raw_translations:Array(String))-class-method","html_id":"normalize_raw_translations(raw_translations:Array(String))-class-method","name":"normalize_raw_translations","doc":"Converts an array of JSON strings to a valid translations hash.","summary":"<p>Converts an array of JSON strings to a valid translations hash.</p>","abstract":false,"args":[{"name":"raw_translations","doc":null,"default_value":"","external_name":"raw_translations","restriction":"Array(String)"}],"args_string":"(raw_translations : Array(String))","args_html":"(raw_translations : Array(String))","location":{"filename":"src/i18n/loader/json.cr","line_number":26,"url":null},"def":{"name":"normalize_raw_translations","args":[{"name":"raw_translations","doc":null,"default_value":"","external_name":"raw_translations","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"translations_data = TranslationsHash.new\nraw_translations.each do |data|\n  (::JSON.parse(data)).as_h.each do |locale, locale_data|\n    __temp_27 = locale\n    translations_data[__temp_27]? || (translations_data[__temp_27] = TranslationsHash.new)\n    (translations_data[locale].as(TranslationsHash)).merge!(parsed_data_to_translations_hash(locale_data))\n  end\nend\ntranslations_data\n"}}],"constructors":[{"id":"new(path:String)-class-method","html_id":"new(path:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/i18n/loader/json.cr","line_number":39,"url":null},"def":{"name":"new","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(preloaded_translations:TranslationsHash)-class-method","html_id":"new(preloaded_translations:TranslationsHash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"preloaded_translations","doc":null,"default_value":"","external_name":"preloaded_translations","restriction":"TranslationsHash"}],"args_string":"(preloaded_translations : TranslationsHash)","args_html":"(preloaded_translations : <a href=\"../../I18n/TranslationsHash.html\">TranslationsHash</a>)","location":{"filename":"src/i18n/loader/json.cr","line_number":42,"url":null},"def":{"name":"new","args":[{"name":"preloaded_translations","doc":null,"default_value":"","external_name":"preloaded_translations","restriction":"TranslationsHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(preloaded_translations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"load:TranslationsHash-instance-method","html_id":"load:TranslationsHash-instance-method","name":"load","doc":"Loads the translations targetted by the current loader.","summary":"<p>Loads the translations targetted by the current loader.</p>","abstract":false,"args":[],"args_string":" : TranslationsHash","args_html":" : <a href=\"../../I18n/TranslationsHash.html\">TranslationsHash</a>","location":{"filename":"src/i18n/loader/json.cr","line_number":49,"url":null},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TranslationsHash","visibility":"Public","body":"if @preloaded_translations.nil?\nelse\n  return @preloaded_translations.not_nil!\nend\nraw_translations = [] of String\nDir.glob(@path.not_nil! + \"/**/*.json\") do |filename|\n  raw_translations << (File.read(filename))\nend\nself.class.normalize_raw_translations(raw_translations)\n"}},{"id":"path:String?-instance-method","html_id":"path:String?-instance-method","name":"path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/i18n/loader/json.cr","line_number":22,"url":null},"def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path"}},{"id":"preloaded_translations:Hash(String,I18n::TranslationsHashValues)?-instance-method","html_id":"preloaded_translations:Hash(String,I18n::TranslationsHashValues)?-instance-method","name":"preloaded_translations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, I18n::TranslationsHashValues)?","args_html":" : Hash(String, <a href=\"../../I18n/TranslationsHashValues.html\">I18n::TranslationsHashValues</a>)?","location":{"filename":"src/i18n/loader/json.cr","line_number":23,"url":null},"def":{"name":"preloaded_translations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preloaded_translations"}}],"macros":[{"id":"embed(path)-macro","html_id":"embed(path)-macro","name":"embed","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","location":{"filename":"src/i18n/loader/json.cr","line_number":45,"url":null},"def":{"name":"embed","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{{ run(\"./json/embed\", path) }}\n\n      \n"}}],"types":[]},{"html_id":"i18n/I18n/Loader/YAML","path":"I18n/Loader/YAML.html","kind":"class","full_name":"I18n::Loader::YAML","name":"YAML","abstract":false,"superclass":{"html_id":"i18n/I18n/Loader/Base","kind":"class","full_name":"I18n::Loader::Base","name":"Base"},"ancestors":[{"html_id":"i18n/I18n/Loader/Base","kind":"class","full_name":"I18n::Loader::Base","name":"Base"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/loader/yaml.cr","line_number":19,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Loader","kind":"module","full_name":"I18n::Loader","name":"Loader"},"doc":"The YAML translations loader.\n\nThis loader implementation allows to load translations from YAML files (`.yaml` or `.yml` files). It must be\ninitialized from a given path and it will recursively try to load all the YAML files that are available under the\ntargetted directory:\n\n```\nI18n.config.loaders << I18n::Loader::YAML.new(\"config/locales\")\n```\n\nThis loader also allows to embed the raw translations that are available under the targetted directory inside the\ncompiled binary through the use of the `#embed` macro:\n\n```\nI18n.config.loaders << I18n::Loader::YAML.embed(\"config/locales\")\n```","summary":"<p>The YAML translations loader.</p>","class_methods":[{"id":"normalize_raw_translations(raw_translations:Array(String))-class-method","html_id":"normalize_raw_translations(raw_translations:Array(String))-class-method","name":"normalize_raw_translations","doc":"Converts an array of YAML strings to a valid translations hash.","summary":"<p>Converts an array of YAML strings to a valid translations hash.</p>","abstract":false,"args":[{"name":"raw_translations","doc":null,"default_value":"","external_name":"raw_translations","restriction":"Array(String)"}],"args_string":"(raw_translations : Array(String))","args_html":"(raw_translations : Array(String))","location":{"filename":"src/i18n/loader/yaml.cr","line_number":27,"url":null},"def":{"name":"normalize_raw_translations","args":[{"name":"raw_translations","doc":null,"default_value":"","external_name":"raw_translations","restriction":"Array(String)"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"translations_data = TranslationsHash.new\nraw_translations.each do |data|\n  (::YAML.parse(data)).as_h.each do |locale, locale_data|\n    __temp_29 = locale.as_s\n    translations_data[__temp_29]? || (translations_data[__temp_29] = TranslationsHash.new)\n    (translations_data[locale.as_s].as(TranslationsHash)).merge!(parsed_data_to_translations_hash(locale_data))\n  end\nend\ntranslations_data\n"}}],"constructors":[{"id":"new(path:String)-class-method","html_id":"new(path:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"args_string":"(path : String)","args_html":"(path : String)","location":{"filename":"src/i18n/loader/yaml.cr","line_number":40,"url":null},"def":{"name":"new","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(path)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}},{"id":"new(preloaded_translations:TranslationsHash)-class-method","html_id":"new(preloaded_translations:TranslationsHash)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"preloaded_translations","doc":null,"default_value":"","external_name":"preloaded_translations","restriction":"TranslationsHash"}],"args_string":"(preloaded_translations : TranslationsHash)","args_html":"(preloaded_translations : <a href=\"../../I18n/TranslationsHash.html\">TranslationsHash</a>)","location":{"filename":"src/i18n/loader/yaml.cr","line_number":43,"url":null},"def":{"name":"new","args":[{"name":"preloaded_translations","doc":null,"default_value":"","external_name":"preloaded_translations","restriction":"TranslationsHash"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(preloaded_translations)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"load:TranslationsHash-instance-method","html_id":"load:TranslationsHash-instance-method","name":"load","doc":"Loads the translations targetted by the current loader.","summary":"<p>Loads the translations targetted by the current loader.</p>","abstract":false,"args":[],"args_string":" : TranslationsHash","args_html":" : <a href=\"../../I18n/TranslationsHash.html\">TranslationsHash</a>","location":{"filename":"src/i18n/loader/yaml.cr","line_number":50,"url":null},"def":{"name":"load","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"TranslationsHash","visibility":"Public","body":"if @preloaded_translations.nil?\nelse\n  return @preloaded_translations.not_nil!\nend\nraw_translations = [] of String\nDir.glob(@path.not_nil! + \"/**/*.yml\", @path.not_nil! + \"/**/*.yaml\") do |filename|\n  raw_translations << (File.read(filename))\nend\nself.class.normalize_raw_translations(raw_translations)\n"}},{"id":"path:String?-instance-method","html_id":"path:String?-instance-method","name":"path","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : String?","args_html":" : String?","location":{"filename":"src/i18n/loader/yaml.cr","line_number":23,"url":null},"def":{"name":"path","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@path"}},{"id":"preloaded_translations:Hash(String,I18n::TranslationsHashValues)?-instance-method","html_id":"preloaded_translations:Hash(String,I18n::TranslationsHashValues)?-instance-method","name":"preloaded_translations","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, I18n::TranslationsHashValues)?","args_html":" : Hash(String, <a href=\"../../I18n/TranslationsHashValues.html\">I18n::TranslationsHashValues</a>)?","location":{"filename":"src/i18n/loader/yaml.cr","line_number":24,"url":null},"def":{"name":"preloaded_translations","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@preloaded_translations"}}],"macros":[{"id":"embed(path)-macro","html_id":"embed(path)-macro","name":"embed","doc":null,"summary":null,"abstract":false,"args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"args_string":"(path)","location":{"filename":"src/i18n/loader/yaml.cr","line_number":46,"url":null},"def":{"name":"embed","args":[{"name":"path","doc":null,"default_value":"","external_name":"path","restriction":""}],"double_splat":null,"splat_index":null,"block_arg":null,"visibility":"Public","body":"        \n{{ run(\"./yaml/embed\", path) }}\n\n      \n"}}],"types":[]}]},{"html_id":"i18n/I18n/Locale","path":"I18n/Locale.html","kind":"module","full_name":"I18n::Locale","name":"Locale","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/locale/fallbacks.cr","line_number":2,"url":null},{"filename":"src/i18n/locale/tag.cr","line_number":2,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Locale/Fallbacks","path":"I18n/Locale/Fallbacks.html","kind":"class","full_name":"I18n::Locale::Fallbacks","name":"Fallbacks","abstract":false,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/locale/fallbacks.cr","line_number":15,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Locale","kind":"module","full_name":"I18n::Locale","name":"Locale"},"doc":"A locales fallbacks configuration.\n\nThis class allows to configure locales fallbacks. Locales fallbacks are comprised of a mapping of fallback chains\n(where specific locales are associated with a specific fallback configuration) and a default fallback chain (which\nis used when no fallback configurations are associated with specific locales).\n\n```\nI18n.config.fallbacks = I18n::Locale::Fallbacks.new(\n  {\"fr-CA-special\": [\"fr-CA\", \"fr\", \"en\"]},\n  default: [\"en\"]\n)\n```","summary":"<p>A locales fallbacks configuration.</p>","class_methods":[],"constructors":[{"id":"new(mapping:Hash(String|Symbol,Array(String|Symbol)|String|Symbol)|NamedTuple|Nil=nil,default:Array(String|Symbol)?=nil)-class-method","html_id":"new(mapping:Hash(String|Symbol,Array(String|Symbol)|String|Symbol)|NamedTuple|Nil=nil,default:Array(String|Symbol)?=nil)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"mapping","doc":null,"default_value":"nil","external_name":"mapping","restriction":"Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | NamedTuple | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Array(String | Symbol) | Nil"}],"args_string":"(mapping : Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | NamedTuple | Nil = <span class=\"n\">nil</span>, default : Array(String | Symbol)? = <span class=\"n\">nil</span>)","args_html":"(mapping : Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | NamedTuple | Nil = <span class=\"n\">nil</span>, default : Array(String | Symbol)? = <span class=\"n\">nil</span>)","location":{"filename":"src/i18n/locale/fallbacks.cr","line_number":22,"url":null},"def":{"name":"new","args":[{"name":"mapping","doc":null,"default_value":"nil","external_name":"mapping","restriction":"Hash(String | Symbol, Array(String | Symbol) | String | Symbol) | NamedTuple | Nil"},{"name":"default","doc":null,"default_value":"nil","external_name":"default","restriction":"Array(String | Symbol) | Nil"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(mapping, default)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"default:Array(String)-instance-method","html_id":"default:Array(String)-instance-method","name":"default","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Array(String)","args_html":" : Array(String)","location":{"filename":"src/i18n/locale/fallbacks.cr","line_number":19,"url":null},"def":{"name":"default","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@default"}},{"id":"for(locale:String|Symbol):Array(String)-instance-method","html_id":"for(locale:String|Symbol):Array(String)-instance-method","name":"for","doc":"Returns the locales that should be used as fallbacks for a given locale.","summary":"<p>Returns the locales that should be used as fallbacks for a given locale.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol) : Array(String)","args_html":"(locale : String | Symbol) : Array(String)","location":{"filename":"src/i18n/locale/fallbacks.cr","line_number":39,"url":null},"def":{"name":"for","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(String)","visibility":"Public","body":"fallbacks = @computed[locale.to_s]?\nif !fallbacks.nil?\n  return fallbacks\nend\n@computed[locale.to_s] = gen_fallbacks_for([locale.to_s])\n"}},{"id":"mapping:Hash(String,Array(String))-instance-method","html_id":"mapping:Hash(String,Array(String))-instance-method","name":"mapping","doc":null,"summary":null,"abstract":false,"args":[],"args_string":" : Hash(String, Array(String))","args_html":" : Hash(String, Array(String))","location":{"filename":"src/i18n/locale/fallbacks.cr","line_number":20,"url":null},"def":{"name":"mapping","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@mapping"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Locale/Tag","path":"I18n/Locale/Tag.html","kind":"class","full_name":"I18n::Locale::Tag","name":"Tag","abstract":false,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/locale/tag.cr","line_number":6,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Locale","kind":"module","full_name":"I18n::Locale","name":"Locale"},"doc":"A locale tag.\n\nThis class allows to manipulate locale tags and locale tag parents.","summary":"<p>A locale tag.</p>","class_methods":[],"constructors":[{"id":"new(tag:String)-class-method","html_id":"new(tag:String)-class-method","name":"new","doc":null,"summary":null,"abstract":false,"args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"args_string":"(tag : String)","args_html":"(tag : String)","location":{"filename":"src/i18n/locale/tag.cr","line_number":9,"url":null},"def":{"name":"new","args":[{"name":"tag","doc":null,"default_value":"","external_name":"tag","restriction":"String"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"_ = allocate\n_.initialize(tag)\nif _.responds_to?(:finalize)\n  ::GC.add_finalizer(_)\nend\n_\n"}}],"instance_methods":[{"id":"==(other:self)-instance-method","html_id":"==(other:self)-instance-method","name":"==","doc":"Returns `true` if this reference is the same as *other*. Invokes `same?`.","summary":"<p>Returns <code>true</code> if this reference is the same as <em>other</em>.</p>","abstract":false,"args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"args_string":"(other : <span class=\"k\">self</span>)","args_html":"(other : <span class=\"k\">self</span>)","location":{"filename":"src/i18n/locale/tag.cr","line_number":12,"url":null},"def":{"name":"==","args":[{"name":"other","doc":null,"default_value":"","external_name":"other","restriction":"self"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"(super(other)) || (other.to_s == @tag)"}},{"id":"parent:self?-instance-method","html_id":"parent:self?-instance-method","name":"parent","doc":"Returns the direct parent tag or `nil` if none is available.","summary":"<p>Returns the direct parent tag or <code>nil</code> if none is available.</p>","abstract":false,"args":[],"args_string":" : <span class=\"k\">self</span>?","args_html":" : <span class=\"k\">self</span>?","location":{"filename":"src/i18n/locale/tag.cr","line_number":17,"url":null},"def":{"name":"parent","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"self | ::Nil","visibility":"Public","body":"parts.size > 1 ? self.class.new(parts[0..(parts.size - 2)].join(\"-\")) : nil"}},{"id":"parents:Array(self)-instance-method","html_id":"parents:Array(self)-instance-method","name":"parents","doc":"Returns all the available parent tags for the considered locale tags.\n\nAn empty array is returned if the considered locale tags does not have any parents.","summary":"<p>Returns all the available parent tags for the considered locale tags.</p>","abstract":false,"args":[],"args_string":" : Array(<span class=\"k\">self</span>)","args_html":" : Array(<span class=\"k\">self</span>)","location":{"filename":"src/i18n/locale/tag.cr","line_number":24,"url":null},"def":{"name":"parents","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Array(self)","visibility":"Public","body":"parents = [] of Tag | ::Nil\nparents << parent\nif !parents[0].nil?\n  parents = parents + parents[0].not_nil!.parents\nend\nparents.compact\n"}},{"id":"to_s:String-instance-method","html_id":"to_s:String-instance-method","name":"to_s","doc":"Returns a string representation of this object.\n\nDescendants must usually **not** override this method. Instead,\nthey must override `to_s(io)`, which must append to the given\nIO object.","summary":"<p>Returns a string representation of this object.</p>","abstract":false,"args":[],"args_string":" : String","args_html":" : String","location":{"filename":"src/i18n/locale/tag.cr","line_number":31,"url":null},"def":{"name":"to_s","args":[],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@tag"}}],"macros":[],"types":[]}]},{"html_id":"i18n/I18n/Pluralization","path":"I18n/Pluralization.html","kind":"module","full_name":"I18n::Pluralization","name":"Pluralization","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/pluralization.cr","line_number":17,"url":null},{"filename":"src/i18n/pluralization/rule.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/arabic.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/breton.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/central_morocco_tamazight.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/colognian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/east_slavic.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/irish.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/langi.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/latvian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/lithuanian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/macedonian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/maltese.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/manx.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/one_other.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/one_two_other.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/one_up_to_two_other.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/one_with_zero_other.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/other.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/polish.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/romanian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/scottish_gaelic.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/slovenian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/upper_sorbian.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/welsh.cr","line_number":2,"url":null},{"filename":"src/i18n/pluralization/rule/west_slavic.cr","line_number":2,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"Contains utilities allowing to pluralize translated strings.\n\nCustom pluralization rules can be implemented by subclassing the `I18n::Pluralization::Rule` abstract class and by\nimplementing a `#rule` method. Custom pluralization rules can then be registered for specific locale through the use\nof the `#register_rule` method.\n\n```\nclass CustomRule < I18n::Pluralization::Rule\n  def rule(count : Int) : Symbol\n    count == 1 ? :one : :other\n  end\nend\n\nI18n::Pluralization.register_rule(\"en-CA\", CustomRule)\n```","summary":"<p>Contains utilities allowing to pluralize translated strings.</p>","class_methods":[{"id":"register_rule(locale:String|Symbol,rule_klass:Rule.class)-class-method","html_id":"register_rule(locale:String|Symbol,rule_klass:Rule.class)-class-method","name":"register_rule","doc":"Allows to register a pluralization rule for a specific locale.\n\nThis method will associate a specific locale to the passed `rule_klass` (subclass of `I18n::Pluralization::Rule`)\nand ensure that every pluralization performed for this locale are done using this rule.","summary":"<p>Allows to register a pluralization rule for a specific locale.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"},{"name":"rule_klass","doc":null,"default_value":"","external_name":"rule_klass","restriction":"Rule.class"}],"args_string":"(locale : String | Symbol, rule_klass : <span class=\"t\">Rule</span>.<span class=\"k\">class</span>)","args_html":"(locale : String | Symbol, rule_klass : <span class=\"t\">Rule</span>.<span class=\"k\">class</span>)","location":{"filename":"src/i18n/pluralization.cr","line_number":24,"url":null},"def":{"name":"register_rule","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"},{"name":"rule_klass","doc":null,"default_value":"","external_name":"rule_klass","restriction":"Rule.class"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@rules_registry[locale.to_s] = rule_klass.new"}},{"id":"rule_for(locale:String|Symbol)-class-method","html_id":"rule_for(locale:String|Symbol)-class-method","name":"rule_for","doc":"Returns the rule registered for a specific locale, or `nil` if none is registered.","summary":"<p>Returns the rule registered for a specific locale, or <code>nil</code> if none is registered.</p>","abstract":false,"args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"args_string":"(locale : String | Symbol)","args_html":"(locale : String | Symbol)","location":{"filename":"src/i18n/pluralization.cr","line_number":29,"url":null},"def":{"name":"rule_for","args":[{"name":"locale","doc":null,"default_value":"","external_name":"locale","restriction":"String | Symbol"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"","visibility":"Public","body":"@@rules_registry[locale.to_s]?"}}],"constructors":[],"instance_methods":[],"macros":[],"types":[{"html_id":"i18n/I18n/Pluralization/Rule","path":"I18n/Pluralization/Rule.html","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule","abstract":true,"superclass":{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},"ancestors":[{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule.cr","line_number":9,"url":null},{"filename":"src/i18n/pluralization/rule/arabic.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/breton.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/central_morocco_tamazight.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/colognian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/east_slavic.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/irish.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/langi.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/latvian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/lithuanian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/macedonian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/maltese.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/manx.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/one_other.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/one_two_other.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/one_up_to_two_other.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/one_with_zero_other.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/other.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/polish.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/romanian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/scottish_gaelic.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/slovenian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/upper_sorbian.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/welsh.cr","line_number":3,"url":null},{"filename":"src/i18n/pluralization/rule/west_slavic.cr","line_number":3,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[{"html_id":"i18n/I18n/Pluralization/Rule/Arabic","kind":"class","full_name":"I18n::Pluralization::Rule::Arabic","name":"Arabic"},{"html_id":"i18n/I18n/Pluralization/Rule/Breton","kind":"class","full_name":"I18n::Pluralization::Rule::Breton","name":"Breton"},{"html_id":"i18n/I18n/Pluralization/Rule/CentralMoroccoTamazight","kind":"class","full_name":"I18n::Pluralization::Rule::CentralMoroccoTamazight","name":"CentralMoroccoTamazight"},{"html_id":"i18n/I18n/Pluralization/Rule/Colognian","kind":"class","full_name":"I18n::Pluralization::Rule::Colognian","name":"Colognian"},{"html_id":"i18n/I18n/Pluralization/Rule/EastSlavic","kind":"class","full_name":"I18n::Pluralization::Rule::EastSlavic","name":"EastSlavic"},{"html_id":"i18n/I18n/Pluralization/Rule/Irish","kind":"class","full_name":"I18n::Pluralization::Rule::Irish","name":"Irish"},{"html_id":"i18n/I18n/Pluralization/Rule/Langi","kind":"class","full_name":"I18n::Pluralization::Rule::Langi","name":"Langi"},{"html_id":"i18n/I18n/Pluralization/Rule/Latvian","kind":"class","full_name":"I18n::Pluralization::Rule::Latvian","name":"Latvian"},{"html_id":"i18n/I18n/Pluralization/Rule/Lithuanian","kind":"class","full_name":"I18n::Pluralization::Rule::Lithuanian","name":"Lithuanian"},{"html_id":"i18n/I18n/Pluralization/Rule/Macedonian","kind":"class","full_name":"I18n::Pluralization::Rule::Macedonian","name":"Macedonian"},{"html_id":"i18n/I18n/Pluralization/Rule/Maltese","kind":"class","full_name":"I18n::Pluralization::Rule::Maltese","name":"Maltese"},{"html_id":"i18n/I18n/Pluralization/Rule/Manx","kind":"class","full_name":"I18n::Pluralization::Rule::Manx","name":"Manx"},{"html_id":"i18n/I18n/Pluralization/Rule/OneOther","kind":"class","full_name":"I18n::Pluralization::Rule::OneOther","name":"OneOther"},{"html_id":"i18n/I18n/Pluralization/Rule/OneTwoOther","kind":"class","full_name":"I18n::Pluralization::Rule::OneTwoOther","name":"OneTwoOther"},{"html_id":"i18n/I18n/Pluralization/Rule/OneUpToTwoOther","kind":"class","full_name":"I18n::Pluralization::Rule::OneUpToTwoOther","name":"OneUpToTwoOther"},{"html_id":"i18n/I18n/Pluralization/Rule/OneWithZeroOther","kind":"class","full_name":"I18n::Pluralization::Rule::OneWithZeroOther","name":"OneWithZeroOther"},{"html_id":"i18n/I18n/Pluralization/Rule/Other","kind":"class","full_name":"I18n::Pluralization::Rule::Other","name":"Other"},{"html_id":"i18n/I18n/Pluralization/Rule/Polish","kind":"class","full_name":"I18n::Pluralization::Rule::Polish","name":"Polish"},{"html_id":"i18n/I18n/Pluralization/Rule/Romanian","kind":"class","full_name":"I18n::Pluralization::Rule::Romanian","name":"Romanian"},{"html_id":"i18n/I18n/Pluralization/Rule/ScottishGaelic","kind":"class","full_name":"I18n::Pluralization::Rule::ScottishGaelic","name":"ScottishGaelic"},{"html_id":"i18n/I18n/Pluralization/Rule/Slovenian","kind":"class","full_name":"I18n::Pluralization::Rule::Slovenian","name":"Slovenian"},{"html_id":"i18n/I18n/Pluralization/Rule/UpperSorbian","kind":"class","full_name":"I18n::Pluralization::Rule::UpperSorbian","name":"UpperSorbian"},{"html_id":"i18n/I18n/Pluralization/Rule/Welsh","kind":"class","full_name":"I18n::Pluralization::Rule::Welsh","name":"Welsh"},{"html_id":"i18n/I18n/Pluralization/Rule/WestSlavic","kind":"class","full_name":"I18n::Pluralization::Rule::WestSlavic","name":"WestSlavic"}],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization","kind":"module","full_name":"I18n::Pluralization","name":"Pluralization"},"doc":"Abstract pluralization rule.\n\nA pluralization rule class provides a main `#rule` method that, given a `count` number, returns the corresponding\nplural catagory tag. Ideally returned values should be part of the common plural category tags that are defined\n[by the CLDR](http://cldr.unicode.org/index/cldr-spec/plural-rules) (`:zero`, `:one`, `:two`, `:few`, `:many` and\n`:other`).","summary":"<p>Abstract pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":true,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule.cr","line_number":10,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":""}}],"macros":[],"types":[{"html_id":"i18n/I18n/Pluralization/Rule/Arabic","path":"I18n/Pluralization/Rule/Arabic.html","kind":"class","full_name":"I18n::Pluralization::Rule::Arabic","name":"Arabic","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/arabic.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Arabic pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Arabic pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/arabic.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod100 = count % 100\nif count == 0\n  :zero\nelse\n  if count == 1\n    :one\n  else\n    if count == 2\n      :two\n    else\n      if FROM_3_TO_10.includes?(mod100)\n        :few\n      else\n        if FROM_11_TO_99.includes?(mod100)\n          :many\n        else\n          :other\n        end\n      end\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Breton","path":"I18n/Pluralization/Rule/Breton.html","kind":"class","full_name":"I18n::Pluralization::Rule::Breton","name":"Breton","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/breton.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Breton pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Breton pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/breton.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod10 = count % 10\nmod100 = count % 100\nif (mod10 == 1) && (!([11, 71, 91].includes?(mod100)))\n  :one\nelse\n  if (mod10 == 2) && (!([12, 72, 92].includes?(mod100)))\n    :two\n  else\n    if ([3, 4, 9].includes?(mod10)) && (!((((10..19).to_a + (70..79).to_a) + (90..99).to_a).includes?(mod100)))\n      :few\n    else\n      if ((count % 1000000) == 0) && (count != 0)\n        :many\n      else\n        :other\n      end\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/CentralMoroccoTamazight","path":"I18n/Pluralization/Rule/CentralMoroccoTamazight.html","kind":"class","full_name":"I18n::Pluralization::Rule::CentralMoroccoTamazight","name":"CentralMoroccoTamazight","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/central_morocco_tamazight.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Central Morocco Tamazight pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Central Morocco Tamazight pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/central_morocco_tamazight.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if ([0, 1] + (11..99).to_a).includes?(count)\n  :one\nelse\n  :other\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Colognian","path":"I18n/Pluralization/Rule/Colognian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Colognian","name":"Colognian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/colognian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Colognian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Colognian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/colognian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 0\n  :zero\nelse\n  if count == 1\n    :one\n  else\n    :other\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/EastSlavic","path":"I18n/Pluralization/Rule/EastSlavic.html","kind":"class","full_name":"I18n::Pluralization::Rule::EastSlavic","name":"EastSlavic","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/east_slavic.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Pluralization rule used for: Belarusian, Bosnian, Croatian, Russian, Serbian, Serbo-Croatian, Ukrainian.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Pluralization rule used for: Belarusian, Bosnian, Croatian, Russian, Serbian, Serbo-Croatian, Ukrainian.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/east_slavic.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod10 = count % 10\nmod100 = count % 100\nif (mod10 == 1) && (mod100 != 11)\n  :one\nelse\n  if (FROM_2_TO_4.includes?(mod10)) && (!(FROM_12_TO_14.includes?(mod100)))\n    :few\n  else\n    if ((mod10 == 0) || (FROM_5_TO_9.includes?(mod10))) || (FROM_11_TO_14.includes?(mod100))\n      :many\n    else\n      :other\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Irish","path":"I18n/Pluralization/Rule/Irish.html","kind":"class","full_name":"I18n::Pluralization::Rule::Irish","name":"Irish","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/irish.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Irish pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Irish pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/irish.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 1\n  :one\nelse\n  if count == 2\n    :two\n  else\n    if FROM_3_TO_6.includes?(count)\n      :few\n    else\n      if FROM_7_TO_10.includes?(count)\n        :many\n      else\n        :other\n      end\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Langi","path":"I18n/Pluralization/Rule/Langi.html","kind":"class","full_name":"I18n::Pluralization::Rule::Langi","name":"Langi","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/langi.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Langi pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Langi pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/langi.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 0\n  :zero\nelse\n  if count > 0 && count < 2\n    :one\n  else\n    :other\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Latvian","path":"I18n/Pluralization/Rule/Latvian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Latvian","name":"Latvian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/latvian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Latvian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Latvian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/latvian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if ((count % 10) == 1) && ((count % 100) != 11)\n  :one\nelse\n  :other\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Lithuanian","path":"I18n/Pluralization/Rule/Lithuanian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Lithuanian","name":"Lithuanian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/lithuanian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Lithuanian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Lithuanian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/lithuanian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod10 = count % 10\nmod100 = count % 100\nif (mod10 == 1) && (!(FROM_11_TO_19.includes?(mod100)))\n  :one\nelse\n  if (FROM_2_TO_9.includes?(mod10)) && (!(FROM_11_TO_19.includes?(mod100)))\n    :few\n  else\n    :other\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Macedonian","path":"I18n/Pluralization/Rule/Macedonian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Macedonian","name":"Macedonian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/macedonian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Macedonian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Macedonian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/macedonian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if ((count % 10) == 1) && (count != 11)\n  :one\nelse\n  :other\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Maltese","path":"I18n/Pluralization/Rule/Maltese.html","kind":"class","full_name":"I18n::Pluralization::Rule::Maltese","name":"Maltese","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/maltese.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Maltese pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Maltese pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/maltese.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod100 = count % 100\nif count == 1\n  :one\nelse\n  if (count == 0) || (FROM_2_TO_10.includes?(mod100))\n    :few\n  else\n    if FROM_11_TO_19.includes?(mod100)\n      :many\n    else\n      :other\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Manx","path":"I18n/Pluralization/Rule/Manx.html","kind":"class","full_name":"I18n::Pluralization::Rule::Manx","name":"Manx","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/manx.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Manx pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Manx pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/manx.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if ([1, 2].includes?(count % 10)) || ((count % 20) == 0)\n  :one\nelse\n  :other\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/OneOther","path":"I18n/Pluralization/Rule/OneOther.html","kind":"class","full_name":"I18n::Pluralization::Rule::OneOther","name":"OneOther","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/one_other.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"The default pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>The default pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/one_other.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"count == 1 ? :one : :other"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/OneTwoOther","path":"I18n/Pluralization/Rule/OneTwoOther.html","kind":"class","full_name":"I18n::Pluralization::Rule::OneTwoOther","name":"OneTwoOther","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/one_two_other.cr","line_number":8,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Pluralization rule used for: Cornish, Inari Sami, Inuktitut, Lule Sami, Nama, Northern Sami, Sami Language,\nSkolt Sami, Southern Sami.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Pluralization rule used for: Cornish, Inari Sami, Inuktitut, Lule Sami, Nama, Northern Sami, Sami Language, Skolt Sami, Southern Sami.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/one_two_other.cr","line_number":9,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 1\n  :one\nelse\n  if count == 2\n    :two\n  else\n    :other\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/OneUpToTwoOther","path":"I18n/Pluralization/Rule/OneUpToTwoOther.html","kind":"class","full_name":"I18n::Pluralization::Rule::OneUpToTwoOther","name":"OneUpToTwoOther","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/one_up_to_two_other.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Pluralization rule used for: French, Fulah, Kabyle.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Pluralization rule used for: French, Fulah, Kabyle.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/one_up_to_two_other.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"(count && count >= 0) && count < 2 ? :one : :other"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/OneWithZeroOther","path":"I18n/Pluralization/Rule/OneWithZeroOther.html","kind":"class","full_name":"I18n::Pluralization::Rule::OneWithZeroOther","name":"OneWithZeroOther","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/one_with_zero_other.cr","line_number":8,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Pluralization rule used for: Akan, Amharic, Bihari, Filipino, guw, Hindi, Lingala, Malagasy, Northen Sotho,\nTachelhit, Tagalog, Tigrinya, Walloon.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Pluralization rule used for: Akan, Amharic, Bihari, Filipino, guw, Hindi, Lingala, Malagasy, Northen Sotho, Tachelhit, Tagalog, Tigrinya, Walloon.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/one_with_zero_other.cr","line_number":9,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"(count == 0) || (count == 1) ? :one : :other"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Other","path":"I18n/Pluralization/Rule/Other.html","kind":"class","full_name":"I18n::Pluralization::Rule::Other","name":"Other","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/other.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"A rule that only returns the \"other\" pluralization category.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>A rule that only returns the \"other\" pluralization category.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/other.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":":other"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Polish","path":"I18n/Pluralization/Rule/Polish.html","kind":"class","full_name":"I18n::Pluralization::Rule::Polish","name":"Polish","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/polish.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Polish pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Polish pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/polish.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod10 = count % 10\nmod100 = count % 100\nif count == 1\n  :one\nelse\n  if ([2, 3, 4].includes?(mod10)) && (!([12, 13, 14].includes?(mod100)))\n    :few\n  else\n    if (([0, 1] + (5..9).to_a).includes?(mod10)) || ([12, 13, 14].includes?(mod100))\n      :many\n    else\n      :other\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Romanian","path":"I18n/Pluralization/Rule/Romanian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Romanian","name":"Romanian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/romanian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Romanian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Romanian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/romanian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 1\n  :one\nelse\n  if (count == 0) || ((1..19).to_a.includes?(count % 100))\n    :few\n  else\n    :other\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/ScottishGaelic","path":"I18n/Pluralization/Rule/ScottishGaelic.html","kind":"class","full_name":"I18n::Pluralization::Rule::ScottishGaelic","name":"ScottishGaelic","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/scottish_gaelic.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Scottish gaelic pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Scottish gaelic pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/scottish_gaelic.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if (count == 1) || (count == 11)\n  :one\nelse\n  if (count == 2) || (count == 12)\n    :two\n  else\n    if (FROM_3_TO_10 + FROM_13_TO_19).includes?(count)\n      :few\n    else\n      :other\n    end\n  end\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Slovenian","path":"I18n/Pluralization/Rule/Slovenian.html","kind":"class","full_name":"I18n::Pluralization::Rule::Slovenian","name":"Slovenian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/slovenian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Slovenian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Slovenian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/slovenian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod100 = count % 100\nif mod100 == 1\n  :one\nelse\n  if mod100 == 2\n    :two\n  else\n    if (mod100 == 3) || (mod100 == 4)\n      :few\n    else\n      :other\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/UpperSorbian","path":"I18n/Pluralization/Rule/UpperSorbian.html","kind":"class","full_name":"I18n::Pluralization::Rule::UpperSorbian","name":"UpperSorbian","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/upper_sorbian.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Upper sorbian pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Upper sorbian pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/upper_sorbian.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"mod100 = count % 100\nif mod100 == 1\n  :one\nelse\n  if mod100 == 2\n    :two\n  else\n    if (mod100 == 3) || (mod100 == 4)\n      :few\n    else\n      :other\n    end\n  end\nend\n"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/Welsh","path":"I18n/Pluralization/Rule/Welsh.html","kind":"class","full_name":"I18n::Pluralization::Rule::Welsh","name":"Welsh","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/welsh.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Welsh pluralization rule.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Welsh pluralization rule.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/welsh.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"case count\nwhen 0\n  :zero\nwhen 1\n  :one\nwhen 2\n  :two\nwhen 3\n  :few\nwhen 6\n  :many\nelse\n  :other\nend"}}],"macros":[],"types":[]},{"html_id":"i18n/I18n/Pluralization/Rule/WestSlavic","path":"I18n/Pluralization/Rule/WestSlavic.html","kind":"class","full_name":"I18n::Pluralization::Rule::WestSlavic","name":"WestSlavic","abstract":false,"superclass":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"ancestors":[{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},{"html_id":"i18n/Reference","kind":"class","full_name":"Reference","name":"Reference"},{"html_id":"i18n/Object","kind":"class","full_name":"Object","name":"Object"}],"locations":[{"filename":"src/i18n/pluralization/rule/west_slavic.cr","line_number":7,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":false,"aliased":null,"aliased_html":null,"const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n/Pluralization/Rule","kind":"class","full_name":"I18n::Pluralization::Rule","name":"Rule"},"doc":"Pluralization rule used for: Czech, Slovak.\n\nThis rule was initially extracted from [rails-i18n](https://github.com/svenfuchs/rails-i18n).","summary":"<p>Pluralization rule used for: Czech, Slovak.</p>","class_methods":[],"constructors":[],"instance_methods":[{"id":"apply(count:Float|Int):Symbol-instance-method","html_id":"apply(count:Float|Int):Symbol-instance-method","name":"apply","doc":null,"summary":null,"abstract":false,"args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"args_string":"(count : Float | Int) : Symbol","args_html":"(count : Float | Int) : Symbol","location":{"filename":"src/i18n/pluralization/rule/west_slavic.cr","line_number":8,"url":null},"def":{"name":"apply","args":[{"name":"count","doc":null,"default_value":"","external_name":"count","restriction":"Float | Int"}],"double_splat":null,"splat_index":null,"yields":null,"block_arg":null,"return_type":"Symbol","visibility":"Public","body":"if count == 1\n  :one\nelse\n  if FROM_2_TO_4.includes?(count)\n    :few\n  else\n    :other\n  end\nend"}}],"macros":[],"types":[]}]}]},{"html_id":"i18n/I18n/TranslationsHash","path":"I18n/TranslationsHash.html","kind":"alias","full_name":"I18n::TranslationsHash","name":"TranslationsHash","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/translation_hash.cr","line_number":6,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":true,"aliased":"Hash(String, I18n::TranslationsHashValues)","aliased_html":"Hash(String, <a href=\"../I18n/TranslationsHashValues.html\">I18n::TranslationsHashValues</a>)","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":"A translation hash corresponds to a hash that must be returned by `I18n::Loader::Base` subclasses when translations\nare loaded from a specific source.","summary":"<p>A translation hash corresponds to a hash that must be returned by <code><a href=\"../I18n/Loader/Base.html\">I18n::Loader::Base</a></code> subclasses when translations are loaded from a specific source.</p>","class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]},{"html_id":"i18n/I18n/TranslationsHashValues","path":"I18n/TranslationsHashValues.html","kind":"alias","full_name":"I18n::TranslationsHashValues","name":"TranslationsHashValues","abstract":false,"superclass":null,"ancestors":[],"locations":[{"filename":"src/i18n/translation_hash.cr","line_number":2,"url":null}],"repository_name":"i18n","program":false,"enum":false,"alias":true,"aliased":"(Array(String) | Bool | Hash(String, I18n::TranslationsHashValues) | Int32 | String | Nil)","aliased_html":"Array(String) | Bool | Hash(String, <a href=\"../I18n/TranslationsHashValues.html\">I18n::TranslationsHashValues</a>) | Int32 | String | Nil","const":false,"constants":[],"included_modules":[],"extended_modules":[],"subclasses":[],"including_types":[],"namespace":{"html_id":"i18n/I18n","kind":"module","full_name":"I18n","name":"I18n"},"doc":null,"summary":null,"class_methods":[],"constructors":[],"instance_methods":[],"macros":[],"types":[]}]}]}})